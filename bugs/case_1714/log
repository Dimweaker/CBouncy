orig.c
    isMutant: 0
    cmd gcc /root/CBouncy/tmp_5rz0w_g4/case_1714/orig.c -I/root/csmith/include -o orig_gcc -w -Ofast
    res 
case_0.c
    isMutant: 1
    cmd gcc /root/CBouncy/tmp_5rz0w_g4/case_1714/case_0.c -I/root/csmith/include -o case_0_gcc -w -Og
    res Timeout
%%
    func_1(void);
	-falign-functions  -falign-jumps -fsplit-loops -fstrict-aliasing -flra-remat -fthread-jumps -fipa-modref -fssa-backprop -fdelete-null-pointer-checks -fdce -fcaller-saves -frerun-cse-after-loop -fpartial-inlining -ftree-scev-cprop -fif-conversion -fdefer-pop -fcse-follow-jumps  -fcse-skip-blocks -foptimize-sibling-calls -ftree-pta -freorder-blocks-and-partition  -freorder-functions -finline-functions -fsplit-wide-types -funswitch-loops
    func_22(union U0  p_23, int32_t  p_24, union U0  p_25, int32_t * p_26, int32_t * p_27);
	-fstore-merging -fipa-profile -freorder-blocks-algorithm=stc -ftree-vrp -fdevirtualize  -fdevirtualize-speculatively -ftree-pre -fisolate-erroneous-paths-dereference -fipa-modref -fvect-cost-model=very-cheap -fshrink-wrap -fcprop-registers -fpartial-inlining -fschedule-insns  -fschedule-insns2 -fcse-follow-jumps  -fcse-skip-blocks -fmerge-constants -fipa-pure-const -fipa-reference-addressable -foptimize-sibling-calls -fdse -ftree-slsr -freorder-blocks -flra-remat
    func_31(const uint32_t  p_32);
	-ftree-coalesce-vars -fdelete-null-pointer-checks -fgcse-after-reload -ftree-dce -fsplit-loops -fhoist-adjacent-loads -ftree-ch -ftree-partial-pre -fipa-reference -ftree-dominator-opts -funswitch-loops -falign-functions  -falign-jumps -fexpensive-optimizations -falign-labels  -falign-loops -ftree-copy-prop -fssa-phiopt -foptimize-sibling-calls -fstrict-aliasing -fpartial-inlining -fsplit-paths -ftree-phiprop -fdevirtualize  -fdevirtualize-speculatively
    func_38(int32_t * p_39);
	-floop-unroll-and-jam -fgcse-after-reload -fcombine-stack-adjustments -fvect-cost-model=very-cheap -ftree-builtin-call-dce -fipa-reference -frerun-cse-after-loop -fipa-pure-const -ftree-fre -ftree-switch-conversion  -ftree-tail-merge -funit-at-a-time -ffinite-loops -fmerge-constants -fcode-hoisting -ftree-copy-prop -foptimize-sibling-calls -fvect-cost-model=dynamic -fomit-frame-pointer -fsplit-paths -finline-functions-called-once -fsplit-wide-types -fipa-cp-clone
    func_40(int32_t * p_41, int32_t * p_42, int16_t  p_43, uint16_t  p_44);
	-ftree-loop-vectorize -fpeel-loops -fforward-propagate -finline-functions -ftree-sink -fipa-reference-addressable -fipa-bit-cp  -fipa-cp  -fipa-icf -fexpensive-optimizations -fsplit-wide-types -ftree-partial-pre -fipa-pure-const -ftree-ccp -freorder-blocks -fmove-loop-invariants -ftree-dce -ftree-fre -fcaller-saves -freorder-blocks-algorithm=stc -fdelayed-branch -ftree-slp-vectorize -ftree-slsr -fvect-cost-model=very-cheap
    func_45(int32_t  p_46, uint32_t  p_47, int32_t  p_48);
	-fcode-hoisting -ftree-fre -freorder-blocks -fshrink-wrap-separate -fhoist-adjacent-loads -ftree-phiprop -ftree-sink -fipa-bit-cp  -fipa-cp  -fipa-icf -fsplit-wide-types -finline-functions -fsplit-loops -fcompare-elim -ftree-dce -fstore-merging -fmerge-constants -fguess-branch-probability -fgcse-after-reload -flra-remat -fisolate-erroneous-paths-dereference -ftree-loop-distribution -floop-interchange -freorder-blocks-algorithm=stc
    func_59(int32_t * p_60, uint8_t  p_61, int32_t * p_62);
	-fstore-merging -fipa-pure-const -ftree-builtin-call-dce -fthread-jumps -fipa-reference -ftree-sink -flra-remat -fisolate-erroneous-paths-dereference -fhoist-adjacent-loads -ftree-forwprop -freorder-blocks-algorithm=stc -ftree-fre -fssa-backprop -ftree-phiprop -fversion-loops-for-strides -funit-at-a-time -ftree-sra -fpeephole2 -fipa-cp-clone -fcombine-stack-adjustments -ftree-ccp -ftree-ch
    func_64(int32_t * p_65, int32_t * p_66, const int32_t * p_67, uint32_t  p_68, int16_t  p_69);
	-floop-interchange -fomit-frame-pointer -fvect-cost-model=dynamic -ftree-coalesce-vars -fsplit-wide-types -fversion-loops-for-strides -fipa-reference -ftree-slp-vectorize -fvect-cost-model=very-cheap -ftree-slsr -foptimize-sibling-calls -fexpensive-optimizations -ftree-builtin-call-dce -fshrink-wrap-separate -flra-remat -fssa-backprop -fpredictive-commoning -ftree-loop-distribution -ftree-phiprop -floop-unroll-and-jam -fcombine-stack-adjustments -freorder-blocks-algorithm=stc
    func_70(int32_t * p_71, union U0  p_72, uint32_t  p_73, uint8_t  p_74, int32_t * p_75);
	-ftree-partial-pre -fpredictive-commoning -fhoist-adjacent-loads -fcompare-elim -freorder-blocks-algorithm=stc -fgcse  -fgcse-lm -fbranch-count-reg -funswitch-loops -fipa-reference-addressable -fdefer-pop -finline-small-functions -fpartial-inlining -fipa-modref -ftree-ter -fforward-propagate -fthread-jumps -freorder-blocks-and-partition  -freorder-functions -ffinite-loops -fipa-pure-const -fexpensive-optimizations -fsched-interblock  -fsched-spec -foptimize-strlen
    func_76(const union U0  p_77);
	-fcaller-saves -fipa-bit-cp  -fipa-cp  -fipa-icf -fipa-reference -fschedule-insns  -fschedule-insns2 -ftree-phiprop -ftree-partial-pre -foptimize-sibling-calls -floop-interchange -fcode-hoisting -freorder-blocks-and-partition  -freorder-functions -fdevirtualize  -fdevirtualize-speculatively -finline-functions -ftree-vrp -fguess-branch-probability -fssa-phiopt -fauto-inc-dec -fpartial-inlining -falign-functions  -falign-jumps -ftree-coalesce-vars -fmerge-constants -flra-remat -fmove-loop-stores
    func_78(uint32_t  p_79);
	-freorder-blocks-and-partition  -freorder-functions -fauto-inc-dec -fpeel-loops -fforward-propagate -fssa-phiopt -fdse -falign-labels  -falign-loops -fversion-loops-for-strides -fmove-loop-stores -finline-small-functions -fcode-hoisting -ftree-ter -ftree-sink -ftree-partial-pre -finline-functions -fcompare-elim -ftree-pta -ftree-dse -finline-functions-called-once -fipa-reference-addressable -ftree-phiprop -falign-functions  -falign-jumps
    func_82(int32_t * p_83, int32_t  p_84);
	-fshrink-wrap -fipa-bit-cp  -fipa-cp  -fipa-icf -finline-functions -ftree-fre -fmerge-constants -fdelete-null-pointer-checks -freorder-blocks-algorithm=stc -ftree-sink -ffinite-loops -fipa-cp-clone -ftree-ter -fipa-reference-addressable -fcprop-registers -fstrict-aliasing -falign-functions  -falign-jumps -fcode-hoisting -fipa-ra  -fipa-sra  -fipa-vrp -ftree-sra -floop-unroll-and-jam -fcombine-stack-adjustments -fthread-jumps -ftree-ch
    func_85(int32_t * p_86, const int32_t * p_87, int32_t * p_88, const uint32_t  p_89, int16_t  p_90);
	-freorder-blocks-algorithm=stc -fdse -fif-conversion2 -fcaller-saves -fipa-reference-addressable -fipa-reference -fhoist-adjacent-loads -fdelayed-branch -fthread-jumps -ftree-slsr -fguess-branch-probability -ftree-dce -fshrink-wrap-separate -ftree-pta -ftree-loop-vectorize -fif-conversion -ffinite-loops -ftree-sink -fsplit-paths -fdelete-null-pointer-checks -foptimize-sibling-calls -fpartial-inlining
    func_91(uint16_t  p_92, uint8_t  p_93, uint16_t  p_94, uint16_t  p_95);
	-ftree-pta -fcrossjumping -fbranch-count-reg -fmove-loop-stores -frerun-cse-after-loop -fschedule-insns  -fschedule-insns2 -fauto-inc-dec -ftree-builtin-call-dce -ftree-scev-cprop -fforward-propagate -fcombine-stack-adjustments -fipa-profile -fsplit-loops -finline-functions-called-once -fipa-modref -funit-at-a-time -fdelete-null-pointer-checks -ftree-partial-pre -fguess-branch-probability -falign-functions  -falign-jumps -finline-functions -foptimize-strlen
    func_100(int32_t * p_101);
	-ftree-ccp -fcode-hoisting -floop-interchange -findirect-inlining -ftree-loop-distribution -ftree-coalesce-vars -frerun-cse-after-loop -fcaller-saves -fhoist-adjacent-loads -fvect-cost-model=dynamic -funswitch-loops -fipa-pure-const -fssa-backprop -fshrink-wrap-separate -funit-at-a-time -freorder-blocks-and-partition  -freorder-functions -ftree-pre -fbranch-count-reg -ftree-dominator-opts -flra-remat -falign-functions  -falign-jumps -freorder-blocks
    func_102(uint8_t  p_103);
	-ffinite-loops -fpredictive-commoning -findirect-inlining -fsplit-loops -fexpensive-optimizations -fisolate-erroneous-paths-dereference -fsplit-paths -fssa-backprop -fsplit-wide-types -fipa-bit-cp  -fipa-cp  -fipa-icf -fpeephole2 -fmerge-constants -ftree-dse -fguess-branch-probability -fpeel-loops -fdevirtualize  -fdevirtualize-speculatively -ftree-ch -fgcse-after-reload -fssa-phiopt -fipa-modref -ftree-switch-conversion  -ftree-tail-merge -fsched-interblock  -fsched-spec
    func_106(int32_t * p_107, uint32_t  p_108, const union U0  p_109);
	-fthread-jumps -fipa-ra  -fipa-sra  -fipa-vrp -fmerge-constants -frerun-cse-after-loop -fcombine-stack-adjustments -fstrict-aliasing -ftree-phiprop -ftree-loop-distribution -fpeephole2 -fauto-inc-dec -fdevirtualize  -fdevirtualize-speculatively -falign-labels  -falign-loops -fgcse  -fgcse-lm -findirect-inlining -finline-functions -fcaller-saves -fif-conversion2 -fsplit-loops -fversion-loops-for-strides -funit-at-a-time -ftree-scev-cprop -fshrink-wrap-separate
    func_110(int32_t  p_111);
	-fipa-bit-cp  -fipa-cp  -fipa-icf -fif-conversion2 -fsched-interblock  -fsched-spec -ftree-ch -ftree-fre -funswitch-loops -fhoist-adjacent-loads -fipa-cp-clone -fcode-hoisting -ftree-dce -fexpensive-optimizations -falign-labels  -falign-loops -ftree-copy-prop -freorder-blocks-algorithm=stc -freorder-blocks -fthread-jumps -floop-unroll-and-jam -fomit-frame-pointer -ftree-forwprop -fipa-modref -ftree-vrp -fgcse  -fgcse-lm
    func_116(int32_t * p_117, const int32_t * p_118, uint32_t  p_119);
	-fipa-ra  -fipa-sra  -fipa-vrp -finline-small-functions -fcprop-registers -ftree-loop-distribution -fdce -fmerge-constants -fpredictive-commoning -funit-at-a-time -fpeel-loops -ftree-pre -fpeephole2 -ftree-bit-ccp -fforward-propagate -ftree-ch -fstrict-aliasing -floop-interchange -fomit-frame-pointer -fpartial-inlining -fguess-branch-probability -finline-functions-called-once -fipa-reference -ftree-dominator-opts
    func_120(int32_t * p_121, int32_t * p_122, const int8_t  p_123, int8_t  p_124);
	-fgcse-after-reload -fvect-cost-model=very-cheap -fcompare-elim -ftree-bit-ccp -ftree-pre -funit-at-a-time -fipa-ra  -fipa-sra  -fipa-vrp -fcode-hoisting -ftree-pta -funswitch-loops -ftree-sra -fstrict-aliasing -fdefer-pop -frerun-cse-after-loop -fipa-modref -ftree-dse -fmove-loop-stores -finline-small-functions -ftree-partial-pre -ftree-scev-cprop -fssa-backprop -fipa-reference-addressable
    func_126(int32_t * p_127, uint16_t  p_128, uint8_t  p_129, union U0  p_130);
	-falign-functions  -falign-jumps -ftree-switch-conversion  -ftree-tail-merge -fcprop-registers -fcompare-elim -fgcse  -fgcse-lm -ftree-dominator-opts -fstrict-aliasing -fipa-reference-addressable -fshrink-wrap -ftree-coalesce-vars -fversion-loops-for-strides -ftree-fre -ftree-vrp -ftree-dce -fdce -fdefer-pop -finline-functions -fvect-cost-model=very-cheap -freorder-blocks-algorithm=stc -fif-conversion2 -foptimize-sibling-calls -fsched-interblock  -fsched-spec
    func_131(int32_t * p_132, const uint8_t  p_133, int32_t * p_134);
	-fcompare-elim -ftree-switch-conversion  -ftree-tail-merge -ftree-ccp -ftree-loop-vectorize -ftree-pre -fcrossjumping -fssa-backprop -fmerge-constants -fforward-propagate -fvect-cost-model=very-cheap -funit-at-a-time -frerun-cse-after-loop -fdce -ftree-loop-distribution -fipa-reference-addressable -ftree-vrp -fshrink-wrap-separate -ftree-bit-ccp -fstrict-aliasing -ftree-dominator-opts -falign-labels  -falign-loops -ftree-copy-prop
    func_135(int32_t * p_136);
	-ftree-loop-distribution -fcrossjumping -ftree-switch-conversion  -ftree-tail-merge -fpredictive-commoning -ftree-slp-vectorize -ftree-ter -fcompare-elim -fhoist-adjacent-loads -ftree-copy-prop -fsched-interblock  -fsched-spec -ftree-coalesce-vars -freorder-blocks-and-partition  -freorder-functions -fdce -ftree-dominator-opts -fgcse  -fgcse-lm -ftree-sink -fipa-cp-clone -funit-at-a-time -freorder-blocks -ftree-ccp -ftree-pre -fshrink-wrap-separate
    func_137(int16_t  p_138, uint8_t  p_139, int32_t * p_140, uint32_t  p_141, int32_t  p_142);
	-ftree-pre -fssa-phiopt -fguess-branch-probability -ftree-coalesce-vars -fpartial-inlining -finline-functions -ftree-switch-conversion  -ftree-tail-merge -ffinite-loops -ftree-loop-distribution -fmerge-constants -ftree-ch -fdelete-null-pointer-checks -fgcse  -fgcse-lm -fbranch-count-reg -funswitch-loops -falign-functions  -falign-jumps -fcombine-stack-adjustments -fdevirtualize  -fdevirtualize-speculatively -frerun-cse-after-loop -freorder-blocks -ftree-forwprop -ftree-phiprop
    func_143(int32_t  p_144, uint16_t  p_145);
	-ftree-sink -fipa-ra  -fipa-sra  -fipa-vrp -ftree-pta -foptimize-strlen -ftree-ch -fvect-cost-model=very-cheap -finline-functions -ftree-copy-prop -fipa-profile -fsched-interblock  -fsched-spec -fsplit-paths -fomit-frame-pointer -ftree-switch-conversion  -ftree-tail-merge -fif-conversion -fcombine-stack-adjustments -ftree-phiprop -fdefer-pop -foptimize-sibling-calls -fversion-loops-for-strides -flra-remat -ftree-sra -fstore-merging
    func_150(uint32_t  p_151, int8_t * p_152);
	-ftree-copy-prop -ftree-fre -finline-functions -fmove-loop-stores -fdse -fipa-bit-cp  -fipa-cp  -fipa-icf -fssa-backprop -fif-conversion -fmove-loop-invariants -ftree-loop-distribution -fguess-branch-probability -fsched-interblock  -fsched-spec -fdce -fipa-cp-clone -fdefer-pop -foptimize-sibling-calls -fpartial-inlining -ftree-ccp -ftree-vrp -ftree-ch -ftree-coalesce-vars -fgcse-after-reload
    func_153(int32_t * const  p_154, int32_t * p_155, int32_t * p_156, int32_t * p_157);
	-fhoist-adjacent-loads -ftree-bit-ccp -ffinite-loops -finline-functions -fvect-cost-model=dynamic -falign-functions  -falign-jumps -fipa-ra  -fipa-sra  -fipa-vrp -fipa-cp-clone -fcrossjumping -fipa-reference-addressable -fshrink-wrap-separate -fipa-modref -fsplit-paths -fcse-follow-jumps  -fcse-skip-blocks -fshrink-wrap -flra-remat -fgcse-after-reload -fipa-bit-cp  -fipa-cp  -fipa-icf -floop-unroll-and-jam -ftree-scev-cprop -ftree-slp-vectorize -fsplit-wide-types
    func_158(const int16_t  p_159, int8_t * p_160, const int32_t  p_161, int32_t  p_162);
	-fsplit-loops -floop-interchange -fdelete-null-pointer-checks -fpeel-loops -fdce -ftree-scev-cprop -ftree-dse -fipa-cp-clone -ftree-pta -fcode-hoisting -fssa-backprop -fipa-bit-cp  -fipa-cp  -fipa-icf -fauto-inc-dec -fversion-loops-for-strides -ftree-dominator-opts -freorder-blocks-and-partition  -freorder-functions -ftree-bit-ccp -ftree-coalesce-vars -fgcse-after-reload -fmerge-constants -ftree-partial-pre -fdelayed-branch
    func_171(int8_t  p_172, int32_t  p_173, uint8_t  p_174, int32_t  p_175);
	-fipa-ra  -fipa-sra  -fipa-vrp -fguess-branch-probability -ftree-ch -ftree-forwprop -frerun-cse-after-loop -fforward-propagate -foptimize-sibling-calls -ftree-slsr -fvect-cost-model=very-cheap -fversion-loops-for-strides -ftree-builtin-call-dce -ftree-copy-prop -fipa-modref -ftree-bit-ccp -fssa-phiopt -freorder-blocks-and-partition  -freorder-functions -fmove-loop-stores -foptimize-strlen -fcombine-stack-adjustments -falign-functions  -falign-jumps -ftree-ter -fcompare-elim
    func_176(uint32_t  p_177, uint16_t  p_178, union U0  p_179, int32_t * p_180);
	-fstrict-aliasing -fipa-profile -frerun-cse-after-loop -finline-functions-called-once -fthread-jumps -ftree-slp-vectorize -foptimize-strlen -fssa-backprop -ftree-scev-cprop -ftree-vrp -funswitch-loops -fipa-bit-cp  -fipa-cp  -fipa-icf -fif-conversion -fvect-cost-model=dynamic -fhoist-adjacent-loads -fsplit-paths -foptimize-sibling-calls -fdce -ftree-pre -fversion-loops-for-strides -fcprop-registers -fsplit-loops
    func_184(uint16_t  p_185, int8_t  p_186, uint32_t  p_187);
	-falign-labels  -falign-loops -fcprop-registers -ftree-slsr -fssa-phiopt -fhoist-adjacent-loads -fipa-reference-addressable -fcode-hoisting -ftree-pre -fvect-cost-model=dynamic -fsplit-wide-types -fssa-backprop -fshrink-wrap-separate -ftree-loop-distribution -ftree-ccp -finline-functions-called-once -fmerge-constants -ftree-fre -fdelete-null-pointer-checks -freorder-blocks-algorithm=stc -foptimize-sibling-calls -fdelayed-branch -fipa-bit-cp  -fipa-cp  -fipa-icf
    func_191(int32_t  p_192, int32_t  p_193, const int8_t * p_194, int32_t * p_195, int8_t * p_196);
	-ftree-bit-ccp -fsplit-loops -fcaller-saves -frerun-cse-after-loop -ftree-pre -fdelayed-branch -ftree-pta -fthread-jumps -fcode-hoisting -falign-labels  -falign-loops -fipa-pure-const -fif-conversion -flra-remat -ftree-ter -findirect-inlining -ftree-switch-conversion  -ftree-tail-merge -fmerge-constants -fversion-loops-for-strides -fcrossjumping -fpeel-loops -fvect-cost-model=dynamic -fgcse-after-reload
    func_214(uint32_t  p_215);
	-ftree-builtin-call-dce -fif-conversion -fssa-backprop -ftree-forwprop -ftree-ter -fdelayed-branch -fipa-reference-addressable -fcaller-saves -ftree-loop-vectorize -freorder-blocks -fvect-cost-model=very-cheap -fsplit-paths -ftree-phiprop -fdce -ftree-dominator-opts -ftree-pta -fdse -fsplit-loops -fguess-branch-probability -fssa-phiopt -fipa-cp-clone -floop-interchange
    func_220(int8_t * p_221, uint32_t  p_222);
	-freorder-blocks -fmove-loop-invariants -fdse -floop-unroll-and-jam -fmerge-constants -ftree-dominator-opts -freorder-blocks-and-partition  -freorder-functions -ftree-ch -fcaller-saves -fexpensive-optimizations -fbranch-count-reg -fssa-backprop -fcombine-stack-adjustments -ftree-vrp -fcrossjumping -ftree-forwprop -fsplit-wide-types -funit-at-a-time -fgcse-after-reload -fcse-follow-jumps  -fcse-skip-blocks -ftree-loop-distribution -fipa-reference-addressable
    func_228(int8_t * p_229, const int8_t * p_230);
	-fssa-phiopt -ftree-copy-prop -ftree-sra -fsplit-paths -fexpensive-optimizations -floop-interchange -fgcse  -fgcse-lm -falign-functions  -falign-jumps -fsplit-loops -fipa-reference-addressable -flra-remat -fschedule-insns  -fschedule-insns2 -fstrict-aliasing -fcprop-registers -fgcse-after-reload -fpeephole2 -fthread-jumps -fipa-ra  -fipa-sra  -fipa-vrp -fshrink-wrap -ftree-pre -floop-unroll-and-jam -fcode-hoisting
    func_231(uint32_t  p_232, int32_t * const  p_233, union U0  p_234);
	-fsched-interblock  -fsched-spec -fipa-cp-clone -fdse -freorder-blocks -ftree-dce -fshrink-wrap -finline-functions -ftree-switch-conversion  -ftree-tail-merge -fthread-jumps -fforward-propagate -fipa-profile -ftree-loop-distribution -fipa-reference -fmerge-constants -floop-unroll-and-jam -ftree-ter -ftree-loop-vectorize -fsplit-wide-types -frerun-cse-after-loop -ftree-ch -fgcse  -fgcse-lm -ftree-copy-prop
    func_241(uint32_t  p_242, uint32_t  p_243, int16_t  p_244, uint8_t * const  p_245);
	-fipa-reference -fvect-cost-model=dynamic -fsched-interblock  -fsched-spec -fmerge-constants -fauto-inc-dec -frerun-cse-after-loop -fdelete-null-pointer-checks -ffinite-loops -fbranch-count-reg -fexpensive-optimizations -fipa-profile -fsplit-wide-types -fthread-jumps -fshrink-wrap-separate -fstrict-aliasing -fdevirtualize  -fdevirtualize-speculatively -ftree-copy-prop -fipa-bit-cp  -fipa-cp  -fipa-icf -fsplit-paths -fguess-branch-probability -ftree-pta -funit-at-a-time
    func_250(uint8_t  p_251, int8_t  p_252, union U0  p_253);
	-ftree-pre -fisolate-erroneous-paths-dereference -ftree-loop-distribution -fgcse  -fgcse-lm -findirect-inlining -fbranch-count-reg -floop-interchange -fomit-frame-pointer -fexpensive-optimizations -fdse -fforward-propagate -ftree-dominator-opts -fcombine-stack-adjustments -ftree-sra -fschedule-insns  -fschedule-insns2 -foptimize-sibling-calls -ftree-slsr -ftree-switch-conversion  -ftree-tail-merge -fcaller-saves -frerun-cse-after-loop -fipa-modref -ftree-ter
    func_282(int32_t  p_283);
	-falign-functions  -falign-jumps -ftree-ter -freorder-blocks -fpeephole2 -fdelete-null-pointer-checks -fschedule-insns  -fschedule-insns2 -fbranch-count-reg -fsplit-loops -fmerge-constants -fvect-cost-model=very-cheap -fhoist-adjacent-loads -fstore-merging -floop-interchange -ftree-sink -ftree-loop-vectorize -ftree-pta -fdevirtualize  -fdevirtualize-speculatively -ftree-dse -fdce -ftree-dominator-opts -ftree-ccp -fif-conversion
    func_284(uint8_t * p_285, uint8_t  p_286);
	-fipa-cp-clone -fgcse  -fgcse-lm -ftree-ccp -ftree-partial-pre -foptimize-strlen -fstrict-aliasing -ftree-bit-ccp -fif-conversion2 -ftree-vrp -fexpensive-optimizations -fdce -floop-unroll-and-jam -fpartial-inlining -fvect-cost-model=very-cheap -fsplit-wide-types -fcaller-saves -fmove-loop-stores -ftree-scev-cprop -frerun-cse-after-loop -fssa-phiopt -fcode-hoisting -fguess-branch-probability
    func_287(int32_t * p_288, int8_t ** p_289, const int8_t  p_290);
	-ftree-coalesce-vars -ftree-bit-ccp -fipa-reference-addressable -fif-conversion -fdevirtualize  -fdevirtualize-speculatively -fcse-follow-jumps  -fcse-skip-blocks -ftree-pta -fmerge-constants -floop-interchange -ffinite-loops -fauto-inc-dec -ftree-slsr -falign-labels  -falign-loops -ftree-loop-vectorize -ftree-scev-cprop -fversion-loops-for-strides -fif-conversion2 -fgcse  -fgcse-lm -fsplit-wide-types -fcaller-saves -fipa-reference -fpartial-inlining
    func_291(int32_t * p_292);
	-ftree-partial-pre -fhoist-adjacent-loads -ftree-builtin-call-dce -fsched-interblock  -fsched-spec -fssa-backprop -ftree-dce -fdelete-null-pointer-checks -fpeephole2 -fcompare-elim -floop-unroll-and-jam -findirect-inlining -fomit-frame-pointer -finline-functions-called-once -flra-remat -fipa-modref -fbranch-count-reg -ffinite-loops -ftree-loop-vectorize -fdevirtualize  -fdevirtualize-speculatively -freorder-blocks-algorithm=stc -fpartial-inlining -ftree-switch-conversion  -ftree-tail-merge
    func_306(uint8_t * p_307);
	-fvect-cost-model=dynamic -fdevirtualize  -fdevirtualize-speculatively -fsplit-paths -findirect-inlining -funswitch-loops -frerun-cse-after-loop -fssa-phiopt -fmove-loop-stores -fcaller-saves -fcombine-stack-adjustments -fif-conversion -fipa-bit-cp  -fipa-cp  -fipa-icf -fsched-interblock  -fsched-spec -ftree-sra -falign-labels  -falign-loops -ftree-dse -fipa-ra  -fipa-sra  -fipa-vrp -fipa-modref -fcprop-registers -ftree-ter -fexpensive-optimizations -freorder-blocks-algorithm=stc
    func_328(uint32_t * const  p_329, const union U0  p_330, uint32_t  p_331, int8_t ** p_332, uint8_t * p_333);
	-freorder-blocks-and-partition  -freorder-functions -ftree-pta -ftree-coalesce-vars -fsplit-wide-types -foptimize-sibling-calls -finline-small-functions -fdelayed-branch -fssa-backprop -fmove-loop-stores -ftree-forwprop -ftree-dominator-opts -fpeel-loops -fgcse-after-reload -fomit-frame-pointer -fvect-cost-model=very-cheap -fipa-pure-const -floop-unroll-and-jam -fstore-merging -falign-functions  -falign-jumps -ftree-switch-conversion  -ftree-tail-merge -fthread-jumps -fcse-follow-jumps  -fcse-skip-blocks
    func_334(uint32_t  p_335, uint16_t  p_336, int32_t * p_337, int32_t  p_338, uint8_t * p_339);
	-ftree-builtin-call-dce -fisolate-erroneous-paths-dereference -fif-conversion -fdelete-null-pointer-checks -fthread-jumps -fforward-propagate -fpeephole2 -ftree-switch-conversion  -ftree-tail-merge -finline-functions -fcompare-elim -fmove-loop-stores -ftree-pta -funit-at-a-time -fdevirtualize  -fdevirtualize-speculatively -findirect-inlining -ftree-slsr -ftree-dse -finline-functions-called-once -ftree-ccp -fpredictive-commoning -fipa-pure-const -fversion-loops-for-strides
    func_343(const union U0  p_344, int32_t * p_345, uint32_t  p_346);
	-ftree-phiprop -fshrink-wrap -ftree-partial-pre -ftree-ter -floop-unroll-and-jam -ftree-ch -freorder-blocks-and-partition  -freorder-functions -fstore-merging -ftree-dse -fcse-follow-jumps  -fcse-skip-blocks -floop-interchange -ftree-fre -fauto-inc-dec -ftree-ccp -fipa-profile -fpredictive-commoning -finline-small-functions -fcompare-elim -ftree-dce -ftree-pre -fpartial-inlining -fdelete-null-pointer-checks
    func_351(int8_t * p_352);
	-floop-interchange -ftree-pre -fdce -fdevirtualize  -fdevirtualize-speculatively -fsplit-paths -ftree-slsr -ftree-loop-distribution -fsplit-wide-types -fpeel-loops -ftree-builtin-call-dce -freorder-blocks-algorithm=stc -fshrink-wrap -ftree-switch-conversion  -ftree-tail-merge -ftree-coalesce-vars -ftree-vrp -floop-unroll-and-jam -falign-functions  -falign-jumps -fvect-cost-model=very-cheap -fsched-interblock  -fsched-spec -fmove-loop-stores -ftree-dse -fcompare-elim
    func_353(int8_t  p_354);
	-fguess-branch-probability -funit-at-a-time -fcprop-registers -fdevirtualize  -fdevirtualize-speculatively -ftree-ccp -ftree-dce -falign-labels  -falign-loops -fipa-pure-const -ftree-ch -fsplit-loops -fdelete-null-pointer-checks -ftree-phiprop -fstore-merging -fipa-profile -fauto-inc-dec -fcompare-elim -fcrossjumping -findirect-inlining -ftree-slsr -fthread-jumps -fgcse  -fgcse-lm -fshrink-wrap-separate
    func_380(int8_t * p_381, int8_t * p_382, uint8_t  p_383, uint32_t * p_384, const uint32_t * p_385);
	-fgcse  -fgcse-lm -fauto-inc-dec -ftree-vrp -ftree-coalesce-vars -ftree-switch-conversion  -ftree-tail-merge -fstore-merging -ftree-ccp -fdce -freorder-blocks-algorithm=stc -fthread-jumps -fmove-loop-invariants -freorder-blocks-and-partition  -freorder-functions -fsplit-loops -freorder-blocks -fssa-backprop -ftree-forwprop -fomit-frame-pointer -fipa-modref -ftree-scev-cprop -floop-interchange -fcombine-stack-adjustments -fssa-phiopt
    func_386(uint16_t  p_387, int8_t ** const  p_388, uint32_t  p_389);
	-freorder-blocks-and-partition  -freorder-functions -freorder-blocks -fif-conversion2 -falign-labels  -falign-loops -ftree-bit-ccp -fipa-reference -ftree-loop-distribution -fguess-branch-probability -ftree-dominator-opts -ftree-dse -fsplit-wide-types -ftree-fre -findirect-inlining -floop-unroll-and-jam -fbranch-count-reg -freorder-blocks-algorithm=stc -fgcse  -fgcse-lm -fcompare-elim -fipa-pure-const -ftree-slsr -ftree-pre -fisolate-erroneous-paths-dereference
%%
case_1.c
    isMutant: 1
    cmd gcc /root/CBouncy/tmp_5rz0w_g4/case_1714/case_1.c -I/root/csmith/include -o case_1_gcc -w -O2
    res 
%%
    func_1(void);
	-fdelete-null-pointer-checks -fauto-inc-dec -fpeephole2 -fvect-cost-model=very-cheap -foptimize-sibling-calls -fipa-ra  -fipa-sra  -fipa-vrp -ftree-fre -fcaller-saves -ftree-bit-ccp -freorder-blocks -fdevirtualize  -fdevirtualize-speculatively -ftree-pre -fdelayed-branch -fdce -frerun-cse-after-loop -freorder-blocks-algorithm=stc -fcrossjumping -fpartial-inlining -ftree-partial-pre -ftree-scev-cprop -finline-small-functions -funswitch-loops -fipa-bit-cp  -fipa-cp  -fipa-icf -fpeel-loops -fipa-reference -fexpensive-optimizations -ftree-slp-vectorize
    func_22(union U0  p_23, int32_t  p_24, union U0  p_25, int32_t * p_26, int32_t * p_27);
	-ftree-slp-vectorize -ftree-forwprop -fpeel-loops -ftree-loop-distribution -falign-functions  -falign-jumps -fguess-branch-probability -fcombine-stack-adjustments -fipa-cp-clone -fdevirtualize  -fdevirtualize-speculatively -fipa-reference-addressable -fipa-pure-const -fsplit-loops -fcompare-elim -fgcse-after-reload -fcode-hoisting -ftree-vrp -ftree-sra -findirect-inlining -fhoist-adjacent-loads -fipa-bit-cp  -fipa-cp  -fipa-icf -fthread-jumps -funswitch-loops -fsplit-wide-types -fbranch-count-reg -fipa-modref -fpartial-inlining -ftree-pta
    func_31(const uint32_t  p_32);
	-funswitch-loops -fpartial-inlining -fdce -fif-conversion2 -fdelayed-branch -fcode-hoisting -fpeel-loops -fstrict-aliasing -ftree-loop-distribution -ftree-pta -ftree-forwprop -fversion-loops-for-strides -fsched-interblock  -fsched-spec -fcompare-elim -ftree-phiprop -fguess-branch-probability -ftree-slp-vectorize -ftree-vrp -ftree-sink -fgcse-after-reload -fif-conversion -ftree-loop-vectorize -fdse -ftree-scev-cprop -fshrink-wrap-separate -falign-labels  -falign-loops -ftree-switch-conversion  -ftree-tail-merge
    func_38(int32_t * p_39);
	-ftree-builtin-call-dce -fdelete-null-pointer-checks -ftree-dce -fsplit-paths -ftree-loop-distribution -fcompare-elim -falign-labels  -falign-loops -fdelayed-branch -foptimize-strlen -ftree-bit-ccp -fisolate-erroneous-paths-dereference -frerun-cse-after-loop -ftree-dse -fpeephole2 -ffinite-loops -ftree-slp-vectorize -fsched-interblock  -fsched-spec -fmerge-constants -fbranch-count-reg -fipa-modref -ftree-scev-cprop -ftree-ch -fipa-reference -fschedule-insns  -fschedule-insns2 -fssa-backprop -fdse -fgcse  -fgcse-lm
    func_40(int32_t * p_41, int32_t * p_42, int16_t  p_43, uint16_t  p_44);
	-fcombine-stack-adjustments -fdelayed-branch -fvect-cost-model=dynamic -frerun-cse-after-loop -fssa-backprop -fsplit-paths -fdse -finline-functions-called-once -fif-conversion -fpartial-inlining -fexpensive-optimizations -ftree-fre -floop-interchange -fpredictive-commoning -floop-unroll-and-jam -ftree-sink -fmove-loop-stores -fsched-interblock  -fsched-spec -ftree-vrp -fipa-bit-cp  -fipa-cp  -fipa-icf -foptimize-sibling-calls -fcode-hoisting -ftree-loop-distribution -fsplit-wide-types -ftree-phiprop -fipa-modref -fipa-profile
    func_45(int32_t  p_46, uint32_t  p_47, int32_t  p_48);
	-fdefer-pop -findirect-inlining -fgcse-after-reload -fpeel-loops -ftree-fre -fipa-bit-cp  -fipa-cp  -fipa-icf -fssa-phiopt -fdce -fmove-loop-stores -ftree-dce -fipa-reference-addressable -fshrink-wrap-separate -ftree-phiprop -floop-unroll-and-jam -ftree-pta -fsplit-paths -ftree-switch-conversion  -ftree-tail-merge -fpeephole2 -fmerge-constants -fdevirtualize  -fdevirtualize-speculatively -fcompare-elim -foptimize-sibling-calls -ftree-pre -ftree-slsr -fforward-propagate -fpredictive-commoning -fomit-frame-pointer
    func_59(int32_t * p_60, uint8_t  p_61, int32_t * p_62);
	-fschedule-insns  -fschedule-insns2 -fssa-backprop -ftree-bit-ccp -fcprop-registers -fsplit-paths -ftree-ccp -fstore-merging -ftree-sra -fvect-cost-model=dynamic -ftree-copy-prop -fomit-frame-pointer -fipa-reference-addressable -fif-conversion -ftree-dce -fcaller-saves -fdelayed-branch -fipa-profile -fstrict-aliasing -fsched-interblock  -fsched-spec -fsplit-loops -fguess-branch-probability -floop-unroll-and-jam -fsplit-wide-types -fipa-cp-clone -fmove-loop-stores -ftree-builtin-call-dce -fpredictive-commoning
    func_64(int32_t * p_65, int32_t * p_66, const int32_t * p_67, uint32_t  p_68, int16_t  p_69);
	-fbranch-count-reg -fforward-propagate -fexpensive-optimizations -fmove-loop-invariants -fvect-cost-model=dynamic -ftree-ch -fhoist-adjacent-loads -ftree-loop-vectorize -finline-small-functions -fdevirtualize  -fdevirtualize-speculatively -fthread-jumps -ftree-coalesce-vars -freorder-blocks-algorithm=stc -fsplit-wide-types -fif-conversion2 -ftree-dce -fpeel-loops -fschedule-insns  -fschedule-insns2 -fstrict-aliasing -ftree-ccp -findirect-inlining -flra-remat -falign-functions  -falign-jumps -fssa-backprop -fdse -fvect-cost-model=very-cheap -fmove-loop-stores
    func_70(int32_t * p_71, union U0  p_72, uint32_t  p_73, uint8_t  p_74, int32_t * p_75);
	-fipa-pure-const -fgcse-after-reload -ftree-ccp -fssa-backprop -ftree-dominator-opts -findirect-inlining -fdelete-null-pointer-checks -fcombine-stack-adjustments -fif-conversion -fpredictive-commoning -ftree-coalesce-vars -fstore-merging -funswitch-loops -fvect-cost-model=very-cheap -fstrict-aliasing -fdelayed-branch -fdce -ftree-pre -fssa-phiopt -fipa-cp-clone -fcprop-registers -ftree-slp-vectorize -ftree-ter -ftree-phiprop -freorder-blocks -fexpensive-optimizations -fomit-frame-pointer
    func_76(const union U0  p_77);
	-fcode-hoisting -findirect-inlining -ftree-switch-conversion  -ftree-tail-merge -ftree-pta -fmove-loop-invariants -fmerge-constants -fpeephole2 -fdse -fthread-jumps -fdevirtualize  -fdevirtualize-speculatively -fversion-loops-for-strides -ftree-fre -finline-functions -freorder-blocks-algorithm=stc -finline-functions-called-once -ftree-pre -ftree-sra -fssa-backprop -fforward-propagate -freorder-blocks-and-partition  -freorder-functions -fstrict-aliasing -fcompare-elim -ftree-loop-vectorize -funswitch-loops -fhoist-adjacent-loads -fmove-loop-stores -fcprop-registers
    func_78(uint32_t  p_79);
	-ftree-pre -ftree-builtin-call-dce -fstrict-aliasing -fthread-jumps -fschedule-insns  -fschedule-insns2 -fvect-cost-model=dynamic -ftree-ch -foptimize-strlen -fdefer-pop -ftree-pta -frerun-cse-after-loop -fcse-follow-jumps  -fcse-skip-blocks -ftree-scev-cprop -fstore-merging -finline-small-functions -fexpensive-optimizations -fipa-ra  -fipa-sra  -fipa-vrp -fdse -ftree-loop-vectorize -funswitch-loops -ftree-phiprop -fgcse-after-reload -ftree-dse -fsched-interblock  -fsched-spec -freorder-blocks-and-partition  -freorder-functions -fmove-loop-invariants -falign-functions  -falign-jumps
    func_82(int32_t * p_83, int32_t  p_84);
	-fssa-phiopt -fsched-interblock  -fsched-spec -ftree-bit-ccp -fcrossjumping -fisolate-erroneous-paths-dereference -flra-remat -fdelete-null-pointer-checks -ftree-loop-distribution -funswitch-loops -fdefer-pop -fipa-reference -fsplit-wide-types -ftree-copy-prop -fversion-loops-for-strides -floop-unroll-and-jam -fdce -ftree-ccp -fipa-reference-addressable -fpeephole2 -fmerge-constants -fthread-jumps -ftree-loop-vectorize -fvect-cost-model=dynamic -fgcse  -fgcse-lm -ftree-dse -findirect-inlining -ftree-sra
    func_85(int32_t * p_86, const int32_t * p_87, int32_t * p_88, const uint32_t  p_89, int16_t  p_90);
	-fsplit-wide-types -fshrink-wrap -fomit-frame-pointer -ftree-dominator-opts -ftree-pta -fpartial-inlining -frerun-cse-after-loop -ftree-bit-ccp -finline-small-functions -fdefer-pop -fschedule-insns  -fschedule-insns2 -finline-functions-called-once -ftree-fre -ftree-builtin-call-dce -fsplit-paths -ftree-ter -fipa-reference -ffinite-loops -fipa-profile -fisolate-erroneous-paths-dereference -fauto-inc-dec -fcprop-registers -floop-interchange -fpredictive-commoning -fipa-cp-clone -funswitch-loops -fsplit-loops
    func_91(uint16_t  p_92, uint8_t  p_93, uint16_t  p_94, uint16_t  p_95);
	-fsched-interblock  -fsched-spec -ftree-sink -falign-labels  -falign-loops -fisolate-erroneous-paths-dereference -fomit-frame-pointer -ftree-sra -fmove-loop-stores -fgcse  -fgcse-lm -fipa-bit-cp  -fipa-cp  -fipa-icf -fcse-follow-jumps  -fcse-skip-blocks -funswitch-loops -falign-functions  -falign-jumps -ftree-builtin-call-dce -fvect-cost-model=dynamic -fif-conversion2 -fstore-merging -flra-remat -fdefer-pop -fpeel-loops -freorder-blocks-algorithm=stc -fsplit-paths -fforward-propagate -frerun-cse-after-loop -fthread-jumps -fipa-modref -funit-at-a-time -fdelete-null-pointer-checks
    func_100(int32_t * p_101);
	-fpeephole2 -ftree-fre -ftree-slp-vectorize -fsplit-wide-types -floop-unroll-and-jam -funit-at-a-time -fomit-frame-pointer -fdelayed-branch -fguess-branch-probability -finline-small-functions -fsched-interblock  -fsched-spec -falign-labels  -falign-loops -ftree-coalesce-vars -ftree-pre -fvect-cost-model=very-cheap -fisolate-erroneous-paths-dereference -fcombine-stack-adjustments -ftree-vrp -ftree-ccp -foptimize-sibling-calls -fexpensive-optimizations -freorder-blocks-algorithm=stc -fshrink-wrap-separate -fpartial-inlining -frerun-cse-after-loop -fhoist-adjacent-loads -fcse-follow-jumps  -fcse-skip-blocks
    func_102(uint8_t  p_103);
	-funit-at-a-time -fssa-phiopt -fdevirtualize  -fdevirtualize-speculatively -ftree-bit-ccp -ftree-vrp -fif-conversion -ftree-scev-cprop -ftree-switch-conversion  -ftree-tail-merge -fcprop-registers -fshrink-wrap -fdelayed-branch -ftree-dominator-opts -ftree-sink -fipa-ra  -fipa-sra  -fipa-vrp -ftree-dse -fisolate-erroneous-paths-dereference -fsched-interblock  -fsched-spec -fcompare-elim -frerun-cse-after-loop -findirect-inlining -funswitch-loops -ftree-slsr -fomit-frame-pointer -fauto-inc-dec -ftree-sra -ftree-loop-distribution -ftree-coalesce-vars
    func_106(int32_t * p_107, uint32_t  p_108, const union U0  p_109);
	-fdse -foptimize-strlen -fbranch-count-reg -fstore-merging -fipa-reference -ftree-scev-cprop -fstrict-aliasing -fipa-bit-cp  -fipa-cp  -fipa-icf -fexpensive-optimizations -fmerge-constants -fif-conversion2 -ftree-sink -fcrossjumping -fssa-backprop -fpeephole2 -floop-interchange -ftree-ter -ftree-ch -fipa-pure-const -fgcse  -fgcse-lm -foptimize-sibling-calls -ftree-forwprop -fipa-profile -ftree-partial-pre -fpredictive-commoning -fipa-ra  -fipa-sra  -fipa-vrp -falign-functions  -falign-jumps
    func_110(int32_t  p_111);
	-fdelete-null-pointer-checks -fshrink-wrap-separate -fmove-loop-invariants -fcompare-elim -fcrossjumping -fcombine-stack-adjustments -ftree-forwprop -freorder-blocks -fdevirtualize  -fdevirtualize-speculatively -fgcse  -fgcse-lm -ftree-vrp -ftree-switch-conversion  -ftree-tail-merge -fthread-jumps -ftree-slsr -fpeel-loops -fsplit-paths -fpredictive-commoning -fssa-backprop -finline-functions -fpartial-inlining -freorder-blocks-and-partition  -freorder-functions -flra-remat -fsplit-wide-types -ftree-scev-cprop -ftree-loop-distribution -fcse-follow-jumps  -fcse-skip-blocks -ftree-copy-prop
    func_116(int32_t * p_117, const int32_t * p_118, uint32_t  p_119);
	-fipa-bit-cp  -fipa-cp  -fipa-icf -floop-unroll-and-jam -fdelete-null-pointer-checks -ftree-sra -fcprop-registers -ftree-loop-distribution -fstrict-aliasing -fguess-branch-probability -funswitch-loops -fipa-ra  -fipa-sra  -fipa-vrp -ftree-partial-pre -fshrink-wrap-separate -fif-conversion2 -fssa-backprop -fisolate-erroneous-paths-dereference -fcrossjumping -fmerge-constants -ftree-pre -ftree-dominator-opts -fdelayed-branch -falign-labels  -falign-loops -falign-functions  -falign-jumps -fgcse-after-reload -foptimize-sibling-calls -ftree-scev-cprop -fomit-frame-pointer -ftree-coalesce-vars
    func_120(int32_t * p_121, int32_t * p_122, const int8_t  p_123, int8_t  p_124);
	-fmove-loop-invariants -fcrossjumping -ftree-sra -foptimize-sibling-calls -floop-unroll-and-jam -fipa-modref -ftree-loop-distribution -frerun-cse-after-loop -ftree-switch-conversion  -ftree-tail-merge -fipa-cp-clone -fsplit-paths -fbranch-count-reg -fdelayed-branch -fdce -ftree-ccp -finline-small-functions -ftree-ter -ftree-loop-vectorize -falign-functions  -falign-jumps -floop-interchange -fhoist-adjacent-loads -fipa-reference-addressable -finline-functions-called-once -fdefer-pop -fdse -ftree-forwprop -freorder-blocks-and-partition  -freorder-functions
    func_126(int32_t * p_127, uint16_t  p_128, uint8_t  p_129, union U0  p_130);
	-fcompare-elim -ftree-pre -fstore-merging -fcode-hoisting -ftree-ccp -freorder-blocks-and-partition  -freorder-functions -freorder-blocks-algorithm=stc -fomit-frame-pointer -fbranch-count-reg -ftree-dominator-opts -ftree-ch -finline-functions-called-once -fipa-ra  -fipa-sra  -fipa-vrp -fcse-follow-jumps  -fcse-skip-blocks -fsplit-paths -ftree-copy-prop -ftree-dse -fschedule-insns  -fschedule-insns2 -fstrict-aliasing -floop-unroll-and-jam -fgcse-after-reload -fpeel-loops -ftree-loop-distribution -ftree-scev-cprop -foptimize-sibling-calls -fipa-cp-clone -fipa-reference-addressable
    func_131(int32_t * p_132, const uint8_t  p_133, int32_t * p_134);
	-ftree-dominator-opts -falign-functions  -falign-jumps -fshrink-wrap-separate -freorder-blocks-algorithm=stc -floop-unroll-and-jam -fexpensive-optimizations -fpartial-inlining -fgcse-after-reload -fif-conversion2 -fipa-ra  -fipa-sra  -fipa-vrp -ftree-dse -freorder-blocks-and-partition  -freorder-functions -finline-functions -findirect-inlining -ftree-loop-distribution -ftree-loop-vectorize -ftree-pre -foptimize-strlen -funit-at-a-time -ftree-bit-ccp -fif-conversion -ftree-scev-cprop -fdefer-pop -fdevirtualize  -fdevirtualize-speculatively -funswitch-loops -ftree-ch -ftree-vrp
    func_135(int32_t * p_136);
	-fshrink-wrap-separate -fcse-follow-jumps  -fcse-skip-blocks -fvect-cost-model=dynamic -freorder-blocks-and-partition  -freorder-functions -falign-functions  -falign-jumps -fcrossjumping -fthread-jumps -flra-remat -floop-interchange -ftree-slsr -ftree-copy-prop -funit-at-a-time -ftree-phiprop -fdefer-pop -ffinite-loops -fauto-inc-dec -fshrink-wrap -ftree-ccp -ftree-pta -fvect-cost-model=very-cheap -fmove-loop-stores -fcompare-elim -fpredictive-commoning -freorder-blocks-algorithm=stc -fschedule-insns  -fschedule-insns2 -ftree-loop-distribution -ftree-forwprop
    func_137(int16_t  p_138, uint8_t  p_139, int32_t * p_140, uint32_t  p_141, int32_t  p_142);
	-fstrict-aliasing -fsplit-paths -ftree-ter -ftree-copy-prop -ftree-pta -fssa-phiopt -freorder-blocks-algorithm=stc -fcrossjumping -fipa-bit-cp  -fipa-cp  -fipa-icf -ftree-dse -fpredictive-commoning -ffinite-loops -ftree-pre -fforward-propagate -fdelayed-branch -ftree-forwprop -fpartial-inlining -foptimize-strlen -ftree-loop-distribution -fcprop-registers -fssa-backprop -funswitch-loops -fipa-pure-const -fexpensive-optimizations -fipa-reference-addressable -fif-conversion2 -fhoist-adjacent-loads
    func_143(int32_t  p_144, uint16_t  p_145);
	-ftree-coalesce-vars -fexpensive-optimizations -fgcse-after-reload -fforward-propagate -ftree-ccp -fhoist-adjacent-loads -fpeephole2 -fpartial-inlining -fdefer-pop -fipa-cp-clone -fshrink-wrap -fcprop-registers -ftree-loop-vectorize -fsplit-paths -fgcse  -fgcse-lm -fmove-loop-stores -fipa-modref -foptimize-strlen -fcode-hoisting -fcompare-elim -fstore-merging -ftree-dse -fdevirtualize  -fdevirtualize-speculatively -fssa-backprop -fcaller-saves -fcrossjumping -ftree-vrp
    func_150(uint32_t  p_151, int8_t * p_152);
	-fipa-profile -fguess-branch-probability -fmove-loop-invariants -ftree-dce -fipa-modref -ftree-dominator-opts -falign-labels  -falign-loops -ftree-dse -falign-functions  -falign-jumps -funswitch-loops -funit-at-a-time -ftree-phiprop -fdce -fcaller-saves -fipa-ra  -fipa-sra  -fipa-vrp -fssa-phiopt -fdevirtualize  -fdevirtualize-speculatively -fpredictive-commoning -ftree-pre -flra-remat -foptimize-strlen -findirect-inlining -fvect-cost-model=dynamic -ftree-loop-distribution -fversion-loops-for-strides -fstrict-aliasing -fipa-reference
    func_153(int32_t * const  p_154, int32_t * p_155, int32_t * p_156, int32_t * p_157);
	-ftree-loop-vectorize -ftree-bit-ccp -funswitch-loops -freorder-blocks-and-partition  -freorder-functions -fipa-bit-cp  -fipa-cp  -fipa-icf -fguess-branch-probability -fpredictive-commoning -finline-functions-called-once -ftree-copy-prop -fstore-merging -ftree-pta -fsplit-paths -ftree-vrp -ftree-phiprop -freorder-blocks -fdce -fdevirtualize  -fdevirtualize-speculatively -flra-remat -ftree-ch -foptimize-strlen -fipa-profile -ftree-sra -ftree-ccp -fmove-loop-stores -fdelete-null-pointer-checks -fschedule-insns  -fschedule-insns2 -fshrink-wrap-separate
    func_158(const int16_t  p_159, int8_t * p_160, const int32_t  p_161, int32_t  p_162);
	-fipa-reference -fipa-profile -fhoist-adjacent-loads -findirect-inlining -freorder-blocks -ftree-loop-vectorize -fcrossjumping -ftree-dse -freorder-blocks-and-partition  -freorder-functions -fpeephole2 -fcse-follow-jumps  -fcse-skip-blocks -ftree-slsr -fcode-hoisting -ftree-pre -fdevirtualize  -fdevirtualize-speculatively -funit-at-a-time -fforward-propagate -fcaller-saves -ftree-sra -fssa-backprop -freorder-blocks-algorithm=stc -fcombine-stack-adjustments -fauto-inc-dec -ftree-partial-pre -ftree-loop-distribution -ftree-forwprop -finline-functions-called-once
    func_171(int8_t  p_172, int32_t  p_173, uint8_t  p_174, int32_t  p_175);
	-fsplit-loops -fdse -foptimize-strlen -fcprop-registers -fsched-interblock  -fsched-spec -ftree-pre -fipa-cp-clone -fcode-hoisting -fif-conversion2 -fmove-loop-invariants -ftree-ter -fipa-reference-addressable -fgcse-after-reload -fgcse  -fgcse-lm -fbranch-count-reg -ftree-pta -findirect-inlining -fstore-merging -falign-functions  -falign-jumps -fdefer-pop -fsplit-wide-types -fpeel-loops -ftree-loop-distribution -fpredictive-commoning -floop-unroll-and-jam -ffinite-loops -ftree-builtin-call-dce
    func_176(uint32_t  p_177, uint16_t  p_178, union U0  p_179, int32_t * p_180);
	-fipa-reference -fversion-loops-for-strides -fcombine-stack-adjustments -fhoist-adjacent-loads -fmerge-constants -funswitch-loops -freorder-blocks-and-partition  -freorder-functions -fpeephole2 -ftree-phiprop -fdevirtualize  -fdevirtualize-speculatively -fif-conversion -ftree-scev-cprop -ftree-dse -falign-labels  -falign-loops -ftree-partial-pre -ftree-ter -fpredictive-commoning -floop-interchange -ftree-sra -fsplit-loops -fsched-interblock  -fsched-spec -fexpensive-optimizations -ftree-bit-ccp -fcprop-registers -foptimize-strlen -ftree-coalesce-vars -fstore-merging
    func_184(uint16_t  p_185, int8_t  p_186, uint32_t  p_187);
	-ftree-switch-conversion  -ftree-tail-merge -falign-functions  -falign-jumps -finline-small-functions -ftree-ccp -floop-unroll-and-jam -fmerge-constants -fsched-interblock  -fsched-spec -fthread-jumps -fshrink-wrap-separate -fpartial-inlining -fsplit-paths -fipa-reference -fcode-hoisting -ftree-sink -falign-labels  -falign-loops -fif-conversion -ftree-builtin-call-dce -fbranch-count-reg -fipa-bit-cp  -fipa-cp  -fipa-icf -fvect-cost-model=dynamic -ftree-ter -fschedule-insns  -fschedule-insns2 -fsplit-wide-types -floop-interchange -freorder-blocks-and-partition  -freorder-functions -foptimize-strlen -ftree-forwprop
    func_191(int32_t  p_192, int32_t  p_193, const int8_t * p_194, int32_t * p_195, int8_t * p_196);
	-ftree-pta -fdse -ftree-sink -flra-remat -ftree-ch -ftree-dominator-opts -finline-functions -fdelete-null-pointer-checks -fpartial-inlining -freorder-blocks -fpeel-loops -fcse-follow-jumps  -fcse-skip-blocks -fshrink-wrap-separate -fdelayed-branch -fversion-loops-for-strides -fcode-hoisting -ftree-vrp -ftree-loop-distribution -fguess-branch-probability -ftree-slp-vectorize -fdefer-pop -foptimize-sibling-calls -ftree-fre -fstrict-aliasing -fisolate-erroneous-paths-dereference -fsplit-loops -ftree-slsr
    func_214(uint32_t  p_215);
	-fhoist-adjacent-loads -fsplit-paths -fpeephole2 -fauto-inc-dec -ftree-loop-vectorize -fipa-ra  -fipa-sra  -fipa-vrp -ftree-switch-conversion  -ftree-tail-merge -ftree-dce -fcombine-stack-adjustments -fcode-hoisting -fsched-interblock  -fsched-spec -fssa-phiopt -fpeel-loops -fmove-loop-stores -ftree-dominator-opts -fforward-propagate -fsplit-wide-types -ftree-dse -ftree-pre -fpartial-inlining -finline-functions-called-once -falign-labels  -falign-loops -fipa-modref -freorder-blocks-and-partition  -freorder-functions -fstrict-aliasing -ftree-fre -fdelayed-branch
    func_220(int8_t * p_221, uint32_t  p_222);
	-fgcse  -fgcse-lm -ftree-scev-cprop -ftree-ter -fvect-cost-model=dynamic -ftree-slp-vectorize -finline-functions -fschedule-insns  -fschedule-insns2 -ftree-pre -fshrink-wrap -foptimize-sibling-calls -fguess-branch-probability -fdefer-pop -fmove-loop-stores -fshrink-wrap-separate -freorder-blocks-and-partition  -freorder-functions -ftree-slsr -fcrossjumping -fbranch-count-reg -fsplit-wide-types -falign-labels  -falign-loops -fipa-ra  -fipa-sra  -fipa-vrp -fipa-reference-addressable -ftree-vrp -fsplit-paths -fssa-backprop -fstore-merging -fauto-inc-dec
    func_228(int8_t * p_229, const int8_t * p_230);
	-ftree-switch-conversion  -ftree-tail-merge -fdse -flra-remat -floop-unroll-and-jam -fexpensive-optimizations -fcse-follow-jumps  -fcse-skip-blocks -fipa-cp-clone -fcombine-stack-adjustments -finline-functions -ffinite-loops -fschedule-insns  -fschedule-insns2 -ftree-pre -fvect-cost-model=dynamic -ftree-sra -fshrink-wrap -ftree-slp-vectorize -fmove-loop-stores -ftree-loop-distribution -fomit-frame-pointer -fmerge-constants -fpartial-inlining -ftree-dominator-opts -funswitch-loops -ftree-bit-ccp -fdelayed-branch -ftree-ccp -fipa-bit-cp  -fipa-cp  -fipa-icf
    func_231(uint32_t  p_232, int32_t * const  p_233, union U0  p_234);
	-fomit-frame-pointer -ftree-copy-prop -fdce -finline-functions -finline-small-functions -foptimize-sibling-calls -ffinite-loops -fversion-loops-for-strides -fshrink-wrap -fcprop-registers -fisolate-erroneous-paths-dereference -falign-functions  -falign-jumps -fssa-backprop -fvect-cost-model=very-cheap -ftree-vrp -ftree-loop-distribution -findirect-inlining -funit-at-a-time -fdelayed-branch -ftree-ter -ftree-dse -fipa-profile -fauto-inc-dec -fcse-follow-jumps  -fcse-skip-blocks -fgcse  -fgcse-lm -fif-conversion2 -freorder-blocks
    func_241(uint32_t  p_242, uint32_t  p_243, int16_t  p_244, uint8_t * const  p_245);
	-fauto-inc-dec -fdelete-null-pointer-checks -fomit-frame-pointer -funit-at-a-time -findirect-inlining -ftree-slp-vectorize -ftree-loop-vectorize -fif-conversion2 -funswitch-loops -fdse -fpeephole2 -frerun-cse-after-loop -ftree-switch-conversion  -ftree-tail-merge -foptimize-strlen -ftree-ccp -fsplit-wide-types -fguess-branch-probability -ftree-loop-distribution -finline-functions -falign-labels  -falign-loops -fssa-backprop -fisolate-erroneous-paths-dereference -ftree-ch -finline-functions-called-once -fcompare-elim -fdevirtualize  -fdevirtualize-speculatively -fgcse  -fgcse-lm
    func_250(uint8_t  p_251, int8_t  p_252, union U0  p_253);
	-falign-functions  -falign-jumps -fpartial-inlining -floop-unroll-and-jam -ftree-dse -ftree-coalesce-vars -ftree-dominator-opts -fcode-hoisting -fmove-loop-stores -fpredictive-commoning -fsplit-loops -ffinite-loops -fsplit-wide-types -fcprop-registers -ftree-dce -fpeephole2 -fipa-profile -ftree-bit-ccp -fdefer-pop -fipa-reference-addressable -fcompare-elim -ftree-slsr -fssa-backprop -fipa-reference -floop-interchange -fcse-follow-jumps  -fcse-skip-blocks -fauto-inc-dec -ftree-ter
    func_282(int32_t  p_283);
	-ftree-pre -floop-unroll-and-jam -fipa-reference -fdce -finline-functions-called-once -fmove-loop-stores -ffinite-loops -fipa-modref -fshrink-wrap-separate -fversion-loops-for-strides -fschedule-insns  -fschedule-insns2 -fdelete-null-pointer-checks -floop-interchange -ftree-ccp -ftree-vrp -ftree-builtin-call-dce -fisolate-erroneous-paths-dereference -findirect-inlining -ftree-ch -fdelayed-branch -freorder-blocks-algorithm=stc -fmove-loop-invariants -fvect-cost-model=dynamic -fstrict-aliasing -fcprop-registers -ftree-loop-distribution -foptimize-strlen
    func_284(uint8_t * p_285, uint8_t  p_286);
	-flra-remat -fhoist-adjacent-loads -ftree-slp-vectorize -fgcse-after-reload -fcrossjumping -fipa-reference -fdevirtualize  -fdevirtualize-speculatively -ftree-vrp -fsplit-paths -fif-conversion -fauto-inc-dec -fsplit-wide-types -ftree-slsr -fcse-follow-jumps  -fcse-skip-blocks -fipa-bit-cp  -fipa-cp  -fipa-icf -ftree-dominator-opts -ftree-ter -fomit-frame-pointer -fcprop-registers -fdce -funswitch-loops -frerun-cse-after-loop -fshrink-wrap-separate -ftree-coalesce-vars -fcombine-stack-adjustments -fexpensive-optimizations -fforward-propagate
    func_287(int32_t * p_288, int8_t ** p_289, const int8_t  p_290);
	-fshrink-wrap-separate -ftree-sink -ftree-dse -ftree-copy-prop -ftree-dominator-opts -fcprop-registers -fipa-ra  -fipa-sra  -fipa-vrp -fdefer-pop -ftree-dce -fsplit-wide-types -fmove-loop-stores -fschedule-insns  -fschedule-insns2 -fbranch-count-reg -ftree-slp-vectorize -ftree-pre -fipa-cp-clone -fdevirtualize  -fdevirtualize-speculatively -fauto-inc-dec -fipa-modref -ftree-ccp -fipa-bit-cp  -fipa-cp  -fipa-icf -fforward-propagate -fpredictive-commoning -fipa-pure-const -ftree-phiprop -freorder-blocks-algorithm=stc -frerun-cse-after-loop
    func_291(int32_t * p_292);
	-fcprop-registers -ftree-vrp -ftree-partial-pre -ftree-coalesce-vars -fdefer-pop -fdce -ffinite-loops -fversion-loops-for-strides -freorder-blocks-algorithm=stc -fguess-branch-probability -fipa-cp-clone -fcode-hoisting -finline-small-functions -fexpensive-optimizations -ftree-copy-prop -ftree-sra -floop-interchange -fgcse  -fgcse-lm -fpeel-loops -fssa-backprop -fcse-follow-jumps  -fcse-skip-blocks -fdevirtualize  -fdevirtualize-speculatively -finline-functions -fpeephole2 -finline-functions-called-once -fsplit-wide-types -fschedule-insns  -fschedule-insns2
    func_306(uint8_t * p_307);
	-fguess-branch-probability -ftree-dse -floop-interchange -ftree-fre -ftree-forwprop -ftree-ccp -ftree-ch -finline-functions -fforward-propagate -frerun-cse-after-loop -fpredictive-commoning -fmerge-constants -fsplit-wide-types -fipa-reference-addressable -fshrink-wrap -fcompare-elim -fstore-merging -ffinite-loops -fpartial-inlining -ftree-slsr -ftree-phiprop -fmove-loop-invariants -fcrossjumping -ftree-partial-pre -fcse-follow-jumps  -fcse-skip-blocks -falign-labels  -falign-loops -finline-functions-called-once
    func_328(uint32_t * const  p_329, const union U0  p_330, uint32_t  p_331, int8_t ** p_332, uint8_t * p_333);
	-ftree-ccp -ftree-ch -fstore-merging -ftree-coalesce-vars -fmove-loop-invariants -fhoist-adjacent-loads -fvect-cost-model=dynamic -ftree-loop-distribution -fcrossjumping -floop-interchange -freorder-blocks -fipa-cp-clone -fssa-backprop -ftree-pre -ftree-copy-prop -ftree-dse -fipa-bit-cp  -fipa-cp  -fipa-icf -fdse -ftree-phiprop -fif-conversion2 -fipa-pure-const -fsched-interblock  -fsched-spec -ftree-ter -fforward-propagate -fcse-follow-jumps  -fcse-skip-blocks -falign-functions  -falign-jumps -fdevirtualize  -fdevirtualize-speculatively
    func_334(uint32_t  p_335, uint16_t  p_336, int32_t * p_337, int32_t  p_338, uint8_t * p_339);
	-ftree-switch-conversion  -ftree-tail-merge -freorder-blocks-and-partition  -freorder-functions -fdelete-null-pointer-checks -fisolate-erroneous-paths-dereference -fmove-loop-invariants -ftree-loop-vectorize -fpredictive-commoning -ftree-ccp -fipa-reference-addressable -fpeel-loops -ftree-coalesce-vars -ffinite-loops -fstore-merging -ftree-fre -finline-functions-called-once -fipa-pure-const -ftree-forwprop -fcse-follow-jumps  -fcse-skip-blocks -fshrink-wrap-separate -ftree-dominator-opts -fpartial-inlining -fipa-reference -ftree-dse -fhoist-adjacent-loads -foptimize-strlen -fdevirtualize  -fdevirtualize-speculatively -fsplit-wide-types
    func_343(const union U0  p_344, int32_t * p_345, uint32_t  p_346);
	-fif-conversion -fstore-merging -fmove-loop-stores -fmerge-constants -fauto-inc-dec -fpeel-loops -ftree-dce -flra-remat -fssa-backprop -fexpensive-optimizations -ftree-sra -fipa-bit-cp  -fipa-cp  -fipa-icf -fipa-pure-const -ftree-forwprop -ftree-ter -funswitch-loops -ftree-fre -fsched-interblock  -fsched-spec -falign-labels  -falign-loops -fsplit-paths -fguess-branch-probability -fomit-frame-pointer -fversion-loops-for-strides -ftree-pta -fdce -ftree-slp-vectorize -ftree-loop-vectorize
    func_351(int8_t * p_352);
	-ftree-dce -ftree-ch -fsched-interblock  -fsched-spec -finline-small-functions -fcrossjumping -ftree-forwprop -ftree-slp-vectorize -fcompare-elim -ftree-partial-pre -fstore-merging -ftree-vrp -flra-remat -fsplit-paths -fdevirtualize  -fdevirtualize-speculatively -ftree-pre -fversion-loops-for-strides -fsplit-wide-types -ftree-dominator-opts -fcode-hoisting -ftree-switch-conversion  -ftree-tail-merge -ftree-loop-distribution -finline-functions-called-once -fdce -fbranch-count-reg -ftree-phiprop -fcombine-stack-adjustments -fsplit-loops
    func_353(int8_t  p_354);
	-fpredictive-commoning -fvect-cost-model=very-cheap -fdefer-pop -ftree-dce -ftree-ccp -ftree-dse -finline-small-functions -ftree-copy-prop -fipa-modref -ftree-scev-cprop -fsplit-wide-types -floop-interchange -ftree-switch-conversion  -ftree-tail-merge -ftree-bit-ccp -fstrict-aliasing -fcrossjumping -funit-at-a-time -ftree-phiprop -fstore-merging -falign-functions  -falign-jumps -ftree-loop-distribution -ftree-coalesce-vars -fipa-ra  -fipa-sra  -fipa-vrp -fexpensive-optimizations -fomit-frame-pointer -fvect-cost-model=dynamic -fcse-follow-jumps  -fcse-skip-blocks
    func_380(int8_t * p_381, int8_t * p_382, uint8_t  p_383, uint32_t * p_384, const uint32_t * p_385);
	-fgcse  -fgcse-lm -fipa-modref -ftree-phiprop -fsplit-paths -fdevirtualize  -fdevirtualize-speculatively -ftree-sink -fsplit-wide-types -fcprop-registers -ftree-loop-distribution -ftree-switch-conversion  -ftree-tail-merge -fmove-loop-stores -ftree-builtin-call-dce -fcode-hoisting -fdce -fversion-loops-for-strides -fmerge-constants -ftree-slsr -fomit-frame-pointer -finline-functions-called-once -fdelete-null-pointer-checks -fcse-follow-jumps  -fcse-skip-blocks -fgcse-after-reload -fif-conversion -fpeel-loops -freorder-blocks -frerun-cse-after-loop -fisolate-erroneous-paths-dereference
    func_386(uint16_t  p_387, int8_t ** const  p_388, uint32_t  p_389);
	-fvect-cost-model=very-cheap -ftree-fre -fipa-reference-addressable -fpartial-inlining -ftree-builtin-call-dce -falign-functions  -falign-jumps -ftree-phiprop -fstore-merging -fcprop-registers -fipa-profile -ftree-partial-pre -ftree-ccp -funswitch-loops -fgcse  -fgcse-lm -fssa-phiopt -fshrink-wrap-separate -fipa-ra  -fipa-sra  -fipa-vrp -fsplit-paths -fdelete-null-pointer-checks -ftree-loop-distribution -ftree-sink -fipa-pure-const -fipa-bit-cp  -fipa-cp  -fipa-icf -fthread-jumps -ftree-dce -fcompare-elim -ftree-dse
%%
case_2.c
    isMutant: 1
    cmd gcc /root/CBouncy/tmp_5rz0w_g4/case_1714/case_2.c -I/root/csmith/include -o case_2_gcc -w -O3
    res 
%%
    func_1(void);
	-fipa-reference-addressable -ftree-ccp -ftree-loop-distribution -ftree-scev-cprop -ftree-slp-vectorize -fpredictive-commoning -ftree-copy-prop -fstrict-aliasing -fipa-modref -ftree-pre -freorder-blocks-and-partition  -freorder-functions -fif-conversion2 -fisolate-erroneous-paths-dereference
    func_22(union U0  p_23, int32_t  p_24, union U0  p_25, int32_t * p_26, int32_t * p_27);
	-finline-functions-called-once -fpartial-inlining -ftree-ccp -ftree-slp-vectorize -ftree-sra -ftree-pta -fcode-hoisting -freorder-blocks -finline-functions -fhoist-adjacent-loads -fgcse-after-reload -ftree-slsr -fcrossjumping
    func_31(const uint32_t  p_32);
	-fgcse  -fgcse-lm -fdce -fssa-backprop -ftree-switch-conversion  -ftree-tail-merge -fsplit-loops -fcaller-saves -fvect-cost-model=very-cheap -ftree-dce -fshrink-wrap -fmerge-constants -fstrict-aliasing -ftree-loop-vectorize -ftree-ch
    func_38(int32_t * p_39);
	-fcse-follow-jumps  -fcse-skip-blocks -fbranch-count-reg -fthread-jumps -fssa-backprop -ftree-slsr -fdelayed-branch -ftree-sra -fomit-frame-pointer -fpredictive-commoning -fif-conversion -floop-unroll-and-jam -fgcse  -fgcse-lm -fipa-modref
    func_40(int32_t * p_41, int32_t * p_42, int16_t  p_43, uint16_t  p_44);
	-ftree-ch -fpartial-inlining -finline-functions -fipa-profile -fipa-bit-cp  -fipa-cp  -fipa-icf -fgcse-after-reload -ftree-coalesce-vars -finline-small-functions -fvect-cost-model=very-cheap -fisolate-erroneous-paths-dereference -fshrink-wrap-separate -ftree-dominator-opts -ftree-pta
    func_45(int32_t  p_46, uint32_t  p_47, int32_t  p_48);
	-fmove-loop-stores -ftree-ter -fssa-backprop -ftree-sink -flra-remat -ftree-loop-vectorize -finline-functions-called-once -funswitch-loops -funit-at-a-time -fschedule-insns  -fschedule-insns2 -fbranch-count-reg -fguess-branch-probability -fcaller-saves
    func_59(int32_t * p_60, uint8_t  p_61, int32_t * p_62);
	-ftree-forwprop -fguess-branch-probability -fdce -ftree-pta -fcaller-saves -ftree-fre -fsplit-paths -ftree-dce -fipa-cp-clone -fmerge-constants -fcompare-elim -fipa-bit-cp  -fipa-cp  -fipa-icf -falign-functions  -falign-jumps
    func_64(int32_t * p_65, int32_t * p_66, const int32_t * p_67, uint32_t  p_68, int16_t  p_69);
	-floop-unroll-and-jam -ftree-dce -fstrict-aliasing -fssa-backprop -ftree-sink -fdefer-pop -fdelete-null-pointer-checks -fmerge-constants -fcombine-stack-adjustments -fpeel-loops -fpartial-inlining -ftree-bit-ccp -ftree-dominator-opts
    func_70(int32_t * p_71, union U0  p_72, uint32_t  p_73, uint8_t  p_74, int32_t * p_75);
	-ftree-pre -ftree-pta -foptimize-sibling-calls -fpredictive-commoning -fipa-modref -falign-functions  -falign-jumps -fsplit-loops -fipa-ra  -fipa-sra  -fipa-vrp -ftree-dse -falign-labels  -falign-loops -ftree-phiprop -fdefer-pop -ftree-partial-pre
    func_76(const union U0  p_77);
	-fschedule-insns  -fschedule-insns2 -frerun-cse-after-loop -funit-at-a-time -fcprop-registers -fipa-modref -fgcse  -fgcse-lm -fcrossjumping -ftree-dominator-opts -fipa-ra  -fipa-sra  -fipa-vrp -fipa-reference-addressable -ftree-bit-ccp -fdse -flra-remat
    func_78(uint32_t  p_79);
	-fsplit-loops -ftree-ch -freorder-blocks -fvect-cost-model=very-cheap -fdefer-pop -ftree-loop-vectorize -fmerge-constants -ftree-phiprop -fipa-profile -fsplit-wide-types -floop-interchange -fforward-propagate -ftree-dominator-opts
    func_82(int32_t * p_83, int32_t  p_84);
	-fguess-branch-probability -fvect-cost-model=dynamic -fsched-interblock  -fsched-spec -fgcse-after-reload -ftree-switch-conversion  -ftree-tail-merge -fipa-bit-cp  -fipa-cp  -fipa-icf -fisolate-erroneous-paths-dereference -ftree-ccp -fforward-propagate -fvect-cost-model=very-cheap -ftree-dominator-opts -fdefer-pop -ftree-loop-distribution
    func_85(int32_t * p_86, const int32_t * p_87, int32_t * p_88, const uint32_t  p_89, int16_t  p_90);
	-fssa-phiopt -funit-at-a-time -fmove-loop-invariants -foptimize-sibling-calls -ftree-pta -ftree-bit-ccp -falign-functions  -falign-jumps -fcrossjumping -fipa-reference -fforward-propagate -fvect-cost-model=very-cheap -fdse -fschedule-insns  -fschedule-insns2
    func_91(uint16_t  p_92, uint8_t  p_93, uint16_t  p_94, uint16_t  p_95);
	-frerun-cse-after-loop -fschedule-insns  -fschedule-insns2 -fstore-merging -fdelete-null-pointer-checks -ftree-partial-pre -fomit-frame-pointer -ftree-sink -ftree-sra -fshrink-wrap-separate -ffinite-loops -funswitch-loops -fisolate-erroneous-paths-dereference -fsplit-wide-types
    func_100(int32_t * p_101);
	-floop-interchange -fvect-cost-model=dynamic -finline-small-functions -fgcse-after-reload -fcrossjumping -ftree-dce -ftree-sra -fomit-frame-pointer -fdevirtualize  -fdevirtualize-speculatively -fssa-phiopt -fif-conversion2 -findirect-inlining -fipa-cp-clone
    func_102(uint8_t  p_103);
	-ftree-ter -ftree-pta -floop-interchange -fvect-cost-model=dynamic -ffinite-loops -falign-functions  -falign-jumps -freorder-blocks-algorithm=stc -fcombine-stack-adjustments -fssa-phiopt -fssa-backprop -fguess-branch-probability -foptimize-strlen -fshrink-wrap-separate
    func_106(int32_t * p_107, uint32_t  p_108, const union U0  p_109);
	-fbranch-count-reg -fomit-frame-pointer -fcaller-saves -ftree-fre -fversion-loops-for-strides -ftree-ch -fmove-loop-invariants -fpeephole2 -fgcse-after-reload -fdelete-null-pointer-checks -fvect-cost-model=very-cheap -ftree-vrp -fcrossjumping
    func_110(int32_t  p_111);
	-fforward-propagate -fpredictive-commoning -ftree-slsr -fif-conversion2 -ftree-pre -ffinite-loops -finline-functions -fauto-inc-dec -fpartial-inlining -floop-unroll-and-jam -fdelayed-branch -fcode-hoisting -fcse-follow-jumps  -fcse-skip-blocks
    func_116(int32_t * p_117, const int32_t * p_118, uint32_t  p_119);
	-ftree-bit-ccp -fmerge-constants -finline-functions -ftree-copy-prop -ftree-pta -fdevirtualize  -fdevirtualize-speculatively -fcombine-stack-adjustments -fipa-cp-clone -fforward-propagate -fipa-reference -fauto-inc-dec -fmove-loop-stores -ftree-switch-conversion  -ftree-tail-merge
    func_120(int32_t * p_121, int32_t * p_122, const int8_t  p_123, int8_t  p_124);
	-ftree-builtin-call-dce -foptimize-strlen -fcprop-registers -fdefer-pop -fipa-reference -fschedule-insns  -fschedule-insns2 -ffinite-loops -ftree-dse -fdevirtualize  -fdevirtualize-speculatively -fipa-ra  -fipa-sra  -fipa-vrp -fforward-propagate -ftree-scev-cprop -ftree-slp-vectorize
    func_126(int32_t * p_127, uint16_t  p_128, uint8_t  p_129, union U0  p_130);
	-ftree-dse -flra-remat -fstore-merging -fcse-follow-jumps  -fcse-skip-blocks -fthread-jumps -fpeephole2 -ftree-forwprop -fpeel-loops -fvect-cost-model=dynamic -finline-functions -fpredictive-commoning -fcompare-elim -fcombine-stack-adjustments
    func_131(int32_t * p_132, const uint8_t  p_133, int32_t * p_134);
	-ftree-copy-prop -ftree-forwprop -ftree-ccp -ftree-dominator-opts -fschedule-insns  -fschedule-insns2 -fdevirtualize  -fdevirtualize-speculatively -fvect-cost-model=dynamic -fgcse-after-reload -foptimize-strlen -finline-small-functions -ftree-fre -funit-at-a-time -fipa-reference-addressable
    func_135(int32_t * p_136);
	-fversion-loops-for-strides -fmove-loop-stores -fpeel-loops -fdefer-pop -fipa-bit-cp  -fipa-cp  -fipa-icf -fssa-phiopt -ftree-scev-cprop -ffinite-loops -fguess-branch-probability -ftree-copy-prop -fstore-merging -finline-functions -fgcse-after-reload
    func_137(int16_t  p_138, uint8_t  p_139, int32_t * p_140, uint32_t  p_141, int32_t  p_142);
	-freorder-blocks -fexpensive-optimizations -ftree-ch -fmove-loop-stores -fvect-cost-model=very-cheap -fpeephole2 -ftree-pre -funit-at-a-time -fdce -ftree-coalesce-vars -ftree-forwprop -fdelete-null-pointer-checks -ftree-copy-prop
    func_143(int32_t  p_144, uint16_t  p_145);
	-falign-labels  -falign-loops -fvect-cost-model=dynamic -ftree-loop-vectorize -fdce -ftree-sra -fsplit-paths -fversion-loops-for-strides -foptimize-sibling-calls -fif-conversion -ftree-partial-pre -fmerge-constants -fdevirtualize  -fdevirtualize-speculatively -fstrict-aliasing
    func_150(uint32_t  p_151, int8_t * p_152);
	-ftree-slp-vectorize -ftree-fre -floop-interchange -fmove-loop-invariants -falign-labels  -falign-loops -fipa-modref -fpartial-inlining -frerun-cse-after-loop -findirect-inlining -freorder-blocks -fgcse-after-reload -falign-functions  -falign-jumps -ftree-vrp
    func_153(int32_t * const  p_154, int32_t * p_155, int32_t * p_156, int32_t * p_157);
	-fdelayed-branch -finline-functions-called-once -fomit-frame-pointer -fgcse-after-reload -fdse -ftree-fre -fgcse  -fgcse-lm -frerun-cse-after-loop -fdevirtualize  -fdevirtualize-speculatively -foptimize-sibling-calls -ftree-dce -fipa-modref -ftree-scev-cprop
    func_158(const int16_t  p_159, int8_t * p_160, const int32_t  p_161, int32_t  p_162);
	-ftree-partial-pre -ftree-sink -fif-conversion -fgcse  -fgcse-lm -fssa-phiopt -finline-small-functions -fdelayed-branch -fvect-cost-model=dynamic -freorder-blocks-and-partition  -freorder-functions -ftree-bit-ccp -fcrossjumping -ftree-dce -fpartial-inlining
    func_171(int8_t  p_172, int32_t  p_173, uint8_t  p_174, int32_t  p_175);
	-fipa-reference-addressable -fomit-frame-pointer -ftree-switch-conversion  -ftree-tail-merge -fcombine-stack-adjustments -fpredictive-commoning -ftree-dominator-opts -fbranch-count-reg -ftree-sink -fauto-inc-dec -flra-remat -fpeephole2 -freorder-blocks-algorithm=stc -fsplit-loops
    func_176(uint32_t  p_177, uint16_t  p_178, union U0  p_179, int32_t * p_180);
	-fschedule-insns  -fschedule-insns2 -fdelayed-branch -fcaller-saves -ftree-switch-conversion  -ftree-tail-merge -ftree-vrp -fpeephole2 -floop-unroll-and-jam -ftree-pta -freorder-blocks -fipa-bit-cp  -fipa-cp  -fipa-icf -fstore-merging -fipa-pure-const -ftree-pre
    func_184(uint16_t  p_185, int8_t  p_186, uint32_t  p_187);
	-fstrict-aliasing -fpeel-loops -fshrink-wrap -fdce -fschedule-insns  -fschedule-insns2 -flra-remat -fdse -fssa-backprop -fvect-cost-model=dynamic -freorder-blocks-algorithm=stc -fcombine-stack-adjustments -ftree-slsr -fpredictive-commoning
    func_191(int32_t  p_192, int32_t  p_193, const int8_t * p_194, int32_t * p_195, int8_t * p_196);
	-fipa-modref -fauto-inc-dec -falign-labels  -falign-loops -ftree-dominator-opts -fdelete-null-pointer-checks -ftree-switch-conversion  -ftree-tail-merge -flra-remat -fipa-profile -ftree-phiprop -fexpensive-optimizations -frerun-cse-after-loop -ftree-dse -fstrict-aliasing
    func_214(uint32_t  p_215);
	-fpredictive-commoning -ftree-builtin-call-dce -floop-unroll-and-jam -fgcse  -fgcse-lm -fcaller-saves -ftree-bit-ccp -fipa-modref -foptimize-sibling-calls -falign-functions  -falign-jumps -fpartial-inlining -ftree-phiprop -fipa-pure-const -fcompare-elim
    func_220(int8_t * p_221, uint32_t  p_222);
	-ftree-builtin-call-dce -flra-remat -fipa-ra  -fipa-sra  -fipa-vrp -ftree-forwprop -fpeel-loops -ffinite-loops -fguess-branch-probability -fmerge-constants -ftree-fre -ftree-dce -ftree-sink -fcompare-elim -fsplit-paths
    func_228(int8_t * p_229, const int8_t * p_230);
	-fif-conversion -fpeel-loops -fomit-frame-pointer -ffinite-loops -fshrink-wrap -ftree-slsr -fdefer-pop -fcaller-saves -foptimize-strlen -freorder-blocks-and-partition  -freorder-functions -ftree-forwprop -fsplit-loops -fssa-backprop
    func_231(uint32_t  p_232, int32_t * const  p_233, union U0  p_234);
	-fisolate-erroneous-paths-dereference -falign-functions  -falign-jumps -ftree-dse -ftree-sra -ftree-switch-conversion  -ftree-tail-merge -ftree-ccp -ftree-pre -fipa-cp-clone -flra-remat -ftree-vrp -fpeel-loops -fvect-cost-model=very-cheap -floop-unroll-and-jam
    func_241(uint32_t  p_242, uint32_t  p_243, int16_t  p_244, uint8_t * const  p_245);
	-ftree-sra -ftree-ter -ftree-ccp -fcombine-stack-adjustments -fstore-merging -falign-functions  -falign-jumps -ftree-builtin-call-dce -freorder-blocks-algorithm=stc -fpartial-inlining -findirect-inlining -ftree-loop-distribution -ftree-slp-vectorize -fsplit-paths
    func_250(uint8_t  p_251, int8_t  p_252, union U0  p_253);
	-fipa-profile -fif-conversion -fshrink-wrap -ftree-builtin-call-dce -fdse -fmove-loop-stores -fdevirtualize  -fdevirtualize-speculatively -freorder-blocks-algorithm=stc -finline-small-functions -ftree-coalesce-vars -funit-at-a-time -fmove-loop-invariants -ftree-fre
    func_282(int32_t  p_283);
	-fgcse  -fgcse-lm -ftree-dse -fsplit-paths -fhoist-adjacent-loads -funswitch-loops -fthread-jumps -ffinite-loops -ftree-fre -ftree-dce -ftree-forwprop -floop-interchange -fdce -finline-functions-called-once
    func_284(uint8_t * p_285, uint8_t  p_286);
	-fisolate-erroneous-paths-dereference -fdse -ftree-dce -ftree-slp-vectorize -floop-interchange -ftree-phiprop -fvect-cost-model=very-cheap -fexpensive-optimizations -freorder-blocks-algorithm=stc -floop-unroll-and-jam -ftree-vrp -ftree-forwprop -ftree-slsr
    func_287(int32_t * p_288, int8_t ** p_289, const int8_t  p_290);
	-freorder-blocks -flra-remat -ftree-slsr -ftree-fre -fipa-reference-addressable -ftree-loop-vectorize -findirect-inlining -fdelayed-branch -fpartial-inlining -ftree-pta -foptimize-sibling-calls -floop-interchange -fipa-ra  -fipa-sra  -fipa-vrp
    func_291(int32_t * p_292);
	-ftree-bit-ccp -fgcse-after-reload -fcompare-elim -falign-labels  -falign-loops -funswitch-loops -fshrink-wrap-separate -ftree-pta -ftree-phiprop -ftree-switch-conversion  -ftree-tail-merge -frerun-cse-after-loop -ftree-fre -fsplit-loops -ftree-vrp
    func_306(uint8_t * p_307);
	-fvect-cost-model=very-cheap -finline-functions-called-once -ftree-dce -fipa-bit-cp  -fipa-cp  -fipa-icf -ftree-copy-prop -fshrink-wrap-separate -fif-conversion -fbranch-count-reg -fdce -fisolate-erroneous-paths-dereference -floop-interchange -ftree-partial-pre -fshrink-wrap
    func_328(uint32_t * const  p_329, const union U0  p_330, uint32_t  p_331, int8_t ** p_332, uint8_t * p_333);
	-ftree-coalesce-vars -fvect-cost-model=very-cheap -ftree-dominator-opts -fif-conversion -finline-small-functions -fmove-loop-invariants -ftree-scev-cprop -fpeephole2 -ftree-slsr -fgcse-after-reload -fipa-pure-const -ffinite-loops -falign-labels  -falign-loops
    func_334(uint32_t  p_335, uint16_t  p_336, int32_t * p_337, int32_t  p_338, uint8_t * p_339);
	-ftree-dse -ftree-vrp -ftree-copy-prop -freorder-blocks-and-partition  -freorder-functions -ftree-switch-conversion  -ftree-tail-merge -fhoist-adjacent-loads -ftree-pta -fipa-pure-const -ftree-loop-distribution -fbranch-count-reg -fipa-reference-addressable -fsched-interblock  -fsched-spec -flra-remat
    func_343(const union U0  p_344, int32_t * p_345, uint32_t  p_346);
	-ftree-slp-vectorize -fomit-frame-pointer -freorder-blocks-algorithm=stc -ftree-ter -fssa-backprop -fvect-cost-model=very-cheap -fsplit-loops -ftree-switch-conversion  -ftree-tail-merge -fcprop-registers -ftree-forwprop -funswitch-loops -fauto-inc-dec -ftree-loop-vectorize
    func_351(int8_t * p_352);
	-fipa-reference -funswitch-loops -fforward-propagate -fcompare-elim -fipa-profile -fif-conversion -fipa-cp-clone -ftree-bit-ccp -fsched-interblock  -fsched-spec -ftree-dominator-opts -fstore-merging -fcrossjumping -ftree-loop-vectorize
    func_353(int8_t  p_354);
	-finline-functions -fssa-backprop -ftree-phiprop -fguess-branch-probability -finline-functions-called-once -fpartial-inlining -finline-small-functions -findirect-inlining -ftree-copy-prop -ftree-forwprop -fif-conversion -funswitch-loops -falign-labels  -falign-loops
    func_380(int8_t * p_381, int8_t * p_382, uint8_t  p_383, uint32_t * p_384, const uint32_t * p_385);
	-ftree-ter -ftree-sink -fif-conversion2 -ftree-copy-prop -ftree-pre -foptimize-strlen -finline-functions -fschedule-insns  -fschedule-insns2 -fforward-propagate -fthread-jumps -ftree-pta -fcode-hoisting -ftree-fre
    func_386(uint16_t  p_387, int8_t ** const  p_388, uint32_t  p_389);
	-fshrink-wrap -fbranch-count-reg -fmove-loop-invariants -ftree-vrp -ftree-pre -fipa-reference-addressable -fcombine-stack-adjustments -freorder-blocks-and-partition  -freorder-functions -ftree-loop-vectorize -ftree-fre -fforward-propagate -ffinite-loops -fthread-jumps
%%
case_3.c
    isMutant: 1
    cmd gcc /root/CBouncy/tmp_5rz0w_g4/case_1714/case_3.c -I/root/csmith/include -o case_3_gcc -w -O2
    res 
%%
    func_1(void);
	-ftree-coalesce-vars -fshrink-wrap -falign-functions  -falign-jumps -freorder-blocks -ftree-dse -ftree-slp-vectorize -ftree-forwprop -fmerge-constants -ftree-phiprop -fisolate-erroneous-paths-dereference -falign-labels  -falign-loops -fdse -ffinite-loops -ftree-vrp -fsplit-wide-types -fcombine-stack-adjustments -ftree-loop-distribution -findirect-inlining -fshrink-wrap-separate -fpeel-loops -fipa-reference -ftree-ch
    func_22(union U0  p_23, int32_t  p_24, union U0  p_25, int32_t * p_26, int32_t * p_27);
	-ftree-sra -fdelayed-branch -fsplit-wide-types -fmerge-constants -fbranch-count-reg -fdefer-pop -fssa-backprop -fexpensive-optimizations -ftree-loop-distribution -flra-remat -fshrink-wrap -findirect-inlining -fvect-cost-model=dynamic -fmove-loop-stores -fomit-frame-pointer -fhoist-adjacent-loads -fcombine-stack-adjustments -ftree-scev-cprop -finline-functions-called-once -ftree-ccp -fcaller-saves -fif-conversion2
    func_31(const uint32_t  p_32);
	-fif-conversion -ftree-sra -falign-labels  -falign-loops -floop-unroll-and-jam -fmerge-constants -finline-functions-called-once -fexpensive-optimizations -fversion-loops-for-strides -ftree-switch-conversion  -ftree-tail-merge -fvect-cost-model=dynamic -fhoist-adjacent-loads -fssa-phiopt -fsplit-wide-types -frerun-cse-after-loop -fpeel-loops -fstrict-aliasing -fif-conversion2 -funit-at-a-time -ftree-loop-vectorize -fipa-bit-cp  -fipa-cp  -fipa-icf -fdelete-null-pointer-checks -ftree-ch
    func_38(int32_t * p_39);
	-fgcse-after-reload -ftree-dce -fsplit-wide-types -foptimize-sibling-calls -fssa-backprop -fguess-branch-probability -fthread-jumps -fipa-reference -foptimize-strlen -ftree-slsr -ftree-sink -fversion-loops-for-strides -findirect-inlining -freorder-blocks -fvect-cost-model=dynamic -fomit-frame-pointer -fdse -ffinite-loops -fcompare-elim -ftree-loop-distribution -fipa-bit-cp  -fipa-cp  -fipa-icf -fpredictive-commoning
    func_40(int32_t * p_41, int32_t * p_42, int16_t  p_43, uint16_t  p_44);
	-fmove-loop-stores -falign-functions  -falign-jumps -ftree-slp-vectorize -fstore-merging -fforward-propagate -frerun-cse-after-loop -fvect-cost-model=very-cheap -ftree-dominator-opts -fdce -ftree-loop-distribution -ftree-pre -ftree-vrp -fgcse-after-reload -fipa-ra  -fipa-sra  -fipa-vrp -finline-functions -ffinite-loops -ftree-dce -fpeephole2 -floop-unroll-and-jam -fguess-branch-probability -fdelayed-branch -ftree-dse
    func_45(int32_t  p_46, uint32_t  p_47, int32_t  p_48);
	-ftree-pta -fsched-interblock  -fsched-spec -fbranch-count-reg -ftree-vrp -fmove-loop-stores -finline-functions-called-once -fipa-cp-clone -ftree-ch -fforward-propagate -fcrossjumping -fipa-modref -fipa-reference-addressable -fdefer-pop -ftree-forwprop -ftree-copy-prop -floop-interchange -fisolate-erroneous-paths-dereference -fsplit-loops -fvect-cost-model=dynamic -fdelayed-branch -fsplit-wide-types -findirect-inlining
    func_59(int32_t * p_60, uint8_t  p_61, int32_t * p_62);
	-fipa-modref -falign-functions  -falign-jumps -freorder-blocks -fipa-bit-cp  -fipa-cp  -fipa-icf -fforward-propagate -fpeephole2 -fcprop-registers -fthread-jumps -fif-conversion2 -floop-interchange -fipa-profile -ftree-coalesce-vars -fsched-interblock  -fsched-spec -ftree-sra -funit-at-a-time -fssa-backprop -fvect-cost-model=dynamic -funswitch-loops -ftree-pre -fvect-cost-model=very-cheap -fcrossjumping -fif-conversion
    func_64(int32_t * p_65, int32_t * p_66, const int32_t * p_67, uint32_t  p_68, int16_t  p_69);
	-fgcse-after-reload -fdse -fipa-cp-clone -ftree-slsr -ftree-ter -fversion-loops-for-strides -fexpensive-optimizations -ftree-copy-prop -foptimize-sibling-calls -fvect-cost-model=dynamic -ftree-dominator-opts -fcprop-registers -fmerge-constants -fipa-reference-addressable -fforward-propagate -fauto-inc-dec -funswitch-loops -fdelayed-branch -ftree-loop-vectorize -fipa-pure-const -falign-labels  -falign-loops -fmove-loop-stores
    func_70(int32_t * p_71, union U0  p_72, uint32_t  p_73, uint8_t  p_74, int32_t * p_75);
	-fexpensive-optimizations -fisolate-erroneous-paths-dereference -ftree-sra -fforward-propagate -fipa-bit-cp  -fipa-cp  -fipa-icf -fdefer-pop -fpredictive-commoning -fomit-frame-pointer -freorder-blocks-and-partition  -freorder-functions -fssa-phiopt -ftree-dse -funit-at-a-time -ftree-loop-distribution -ftree-dce -fipa-cp-clone -falign-labels  -falign-loops -fsplit-wide-types -fbranch-count-reg -ftree-ccp -fipa-reference -fcaller-saves -flra-remat
    func_76(const union U0  p_77);
	-fshrink-wrap -ftree-vrp -foptimize-sibling-calls -fcombine-stack-adjustments -ftree-forwprop -fpeel-loops -fipa-ra  -fipa-sra  -fipa-vrp -ftree-loop-vectorize -fversion-loops-for-strides -foptimize-strlen -findirect-inlining -finline-functions -fauto-inc-dec -fguess-branch-probability -ftree-phiprop -fmerge-constants -fipa-cp-clone -fomit-frame-pointer -fipa-bit-cp  -fipa-cp  -fipa-icf -fpartial-inlining -fif-conversion -fvect-cost-model=very-cheap
    func_78(uint32_t  p_79);
	-fexpensive-optimizations -fhoist-adjacent-loads -ftree-ccp -fpartial-inlining -ftree-coalesce-vars -ftree-slsr -fcompare-elim -foptimize-sibling-calls -ftree-ter -fguess-branch-probability -fvect-cost-model=very-cheap -fcrossjumping -ftree-sink -ftree-copy-prop -fpredictive-commoning -ftree-bit-ccp -freorder-blocks-and-partition  -freorder-functions -fssa-phiopt -fssa-backprop -ffinite-loops -ftree-vrp -fvect-cost-model=dynamic
    func_82(int32_t * p_83, int32_t  p_84);
	-funswitch-loops -fstore-merging -foptimize-sibling-calls -ftree-ch -fdce -ftree-sra -fpeel-loops -ftree-bit-ccp -ftree-slsr -ftree-switch-conversion  -ftree-tail-merge -fcse-follow-jumps  -fcse-skip-blocks -falign-functions  -falign-jumps -ftree-fre -ftree-slp-vectorize -fpeephole2 -fvect-cost-model=dynamic -fvect-cost-model=very-cheap -fguess-branch-probability -falign-labels  -falign-loops -fversion-loops-for-strides -fipa-modref -fschedule-insns  -fschedule-insns2
    func_85(int32_t * p_86, const int32_t * p_87, int32_t * p_88, const uint32_t  p_89, int16_t  p_90);
	-fschedule-insns  -fschedule-insns2 -fvect-cost-model=very-cheap -ftree-dominator-opts -ftree-slp-vectorize -fvect-cost-model=dynamic -freorder-blocks-and-partition  -freorder-functions -fpeephole2 -funit-at-a-time -fcprop-registers -fstore-merging -foptimize-sibling-calls -fipa-reference-addressable -ftree-builtin-call-dce -fcode-hoisting -floop-interchange -ftree-coalesce-vars -flra-remat -fbranch-count-reg -ftree-fre -ftree-loop-vectorize -fcaller-saves -fdelete-null-pointer-checks
    func_91(uint16_t  p_92, uint8_t  p_93, uint16_t  p_94, uint16_t  p_95);
	-fcode-hoisting -fcompare-elim -ftree-vrp -fgcse-after-reload -finline-functions -ftree-loop-distribution -fipa-modref -fforward-propagate -ftree-coalesce-vars -ftree-scev-cprop -fvect-cost-model=dynamic -ftree-phiprop -fcombine-stack-adjustments -fexpensive-optimizations -ftree-bit-ccp -foptimize-sibling-calls -fsplit-wide-types -ftree-fre -fcrossjumping -fipa-cp-clone -fguess-branch-probability -fpredictive-commoning
    func_100(int32_t * p_101);
	-fif-conversion2 -ftree-loop-distribution -fpeel-loops -ffinite-loops -foptimize-strlen -fmerge-constants -ftree-copy-prop -fipa-bit-cp  -fipa-cp  -fipa-icf -ftree-forwprop -ftree-slsr -ftree-phiprop -fcrossjumping -fdce -fpartial-inlining -finline-small-functions -ftree-ccp -ftree-pta -ftree-pre -fipa-pure-const -fipa-reference-addressable -fomit-frame-pointer -ftree-slp-vectorize
    func_102(uint8_t  p_103);
	-ftree-sra -fmove-loop-stores -fmove-loop-invariants -fsplit-wide-types -fhoist-adjacent-loads -ftree-dse -ftree-copy-prop -fdelete-null-pointer-checks -freorder-blocks -fif-conversion -ftree-vrp -fipa-bit-cp  -fipa-cp  -fipa-icf -fdevirtualize  -fdevirtualize-speculatively -fpeel-loops -floop-unroll-and-jam -ftree-ter -fmerge-constants -fipa-reference -foptimize-sibling-calls -fgcse-after-reload -fstrict-aliasing -ftree-scev-cprop
    func_106(int32_t * p_107, uint32_t  p_108, const union U0  p_109);
	-fstrict-aliasing -ftree-slsr -ftree-loop-distribution -fssa-phiopt -ftree-copy-prop -findirect-inlining -fstore-merging -ftree-slp-vectorize -fsplit-paths -ftree-pta -fif-conversion -fvect-cost-model=dynamic -freorder-blocks -fpeephole2 -fipa-pure-const -ftree-vrp -fschedule-insns  -fschedule-insns2 -ftree-dce -fhoist-adjacent-loads -finline-small-functions -ftree-dominator-opts -fipa-bit-cp  -fipa-cp  -fipa-icf
    func_110(int32_t  p_111);
	-fipa-reference-addressable -ftree-ch -fguess-branch-probability -fstrict-aliasing -fbranch-count-reg -fpredictive-commoning -ftree-coalesce-vars -foptimize-sibling-calls -ftree-loop-distribution -fdevirtualize  -fdevirtualize-speculatively -ftree-dominator-opts -falign-labels  -falign-loops -fvect-cost-model=dynamic -fauto-inc-dec -fcrossjumping -fsplit-wide-types -fvect-cost-model=very-cheap -fdelayed-branch -fgcse  -fgcse-lm -fthread-jumps -funswitch-loops -fipa-profile
    func_116(int32_t * p_117, const int32_t * p_118, uint32_t  p_119);
	-fpartial-inlining -ftree-fre -ftree-coalesce-vars -floop-unroll-and-jam -fisolate-erroneous-paths-dereference -fstore-merging -fif-conversion2 -ftree-forwprop -funit-at-a-time -findirect-inlining -fexpensive-optimizations -fgcse-after-reload -fipa-reference-addressable -fmove-loop-invariants -fcse-follow-jumps  -fcse-skip-blocks -fdelete-null-pointer-checks -fauto-inc-dec -ftree-sink -floop-interchange -freorder-blocks-algorithm=stc -ftree-loop-distribution -finline-small-functions
    func_120(int32_t * p_121, int32_t * p_122, const int8_t  p_123, int8_t  p_124);
	-fipa-reference-addressable -foptimize-strlen -fschedule-insns  -fschedule-insns2 -ftree-dse -ffinite-loops -fdse -ftree-sink -ftree-forwprop -fvect-cost-model=very-cheap -fstore-merging -fbranch-count-reg -fpeel-loops -falign-functions  -falign-jumps -ftree-coalesce-vars -fguess-branch-probability -ftree-slp-vectorize -ftree-pta -freorder-blocks-algorithm=stc -ftree-dce -ftree-dominator-opts -ftree-vrp -fssa-backprop
    func_126(int32_t * p_127, uint16_t  p_128, uint8_t  p_129, union U0  p_130);
	-funit-at-a-time -fipa-reference-addressable -fvect-cost-model=very-cheap -fpeel-loops -ffinite-loops -fomit-frame-pointer -ftree-scev-cprop -fipa-modref -fipa-reference -ftree-dse -ftree-loop-vectorize -fipa-profile -fforward-propagate -fcse-follow-jumps  -fcse-skip-blocks -fpartial-inlining -fssa-backprop -fpeephole2 -fipa-cp-clone -ftree-coalesce-vars -flra-remat -ftree-fre -fthread-jumps
    func_131(int32_t * p_132, const uint8_t  p_133, int32_t * p_134);
	-fcrossjumping -fexpensive-optimizations -fversion-loops-for-strides -fstore-merging -ftree-ch -ftree-phiprop -fmerge-constants -ftree-pre -fssa-backprop -fssa-phiopt -funswitch-loops -fpeephole2 -fipa-cp-clone -fforward-propagate -fmove-loop-invariants -ftree-coalesce-vars -fpeel-loops -floop-unroll-and-jam -fipa-bit-cp  -fipa-cp  -fipa-icf -freorder-blocks -foptimize-strlen -fif-conversion2
    func_135(int32_t * p_136);
	-ftree-fre -fcompare-elim -fsplit-wide-types -fshrink-wrap-separate -ftree-partial-pre -fstore-merging -fversion-loops-for-strides -freorder-blocks-and-partition  -freorder-functions -fexpensive-optimizations -fvect-cost-model=very-cheap -fif-conversion -fschedule-insns  -fschedule-insns2 -fdelete-null-pointer-checks -falign-labels  -falign-loops -fcombine-stack-adjustments -flra-remat -ffinite-loops -ftree-loop-vectorize -fvect-cost-model=dynamic -ftree-builtin-call-dce -finline-functions -ftree-copy-prop
    func_137(int16_t  p_138, uint8_t  p_139, int32_t * p_140, uint32_t  p_141, int32_t  p_142);
	-fhoist-adjacent-loads -ftree-loop-vectorize -fipa-bit-cp  -fipa-cp  -fipa-icf -fschedule-insns  -fschedule-insns2 -fvect-cost-model=dynamic -fipa-pure-const -ftree-sra -ftree-sink -ftree-ch -fcrossjumping -fshrink-wrap-separate -ftree-fre -ftree-phiprop -freorder-blocks-and-partition  -freorder-functions -finline-small-functions -fif-conversion -fcompare-elim -fthread-jumps -findirect-inlining -ftree-dominator-opts -fif-conversion2 -fbranch-count-reg
    func_143(int32_t  p_144, uint16_t  p_145);
	-fdelayed-branch -ftree-bit-ccp -fssa-phiopt -fpredictive-commoning -fdse -freorder-blocks-and-partition  -freorder-functions -ftree-builtin-call-dce -fdevirtualize  -fdevirtualize-speculatively -ftree-phiprop -freorder-blocks -ftree-dominator-opts -ffinite-loops -fif-conversion2 -ftree-sink -ftree-dse -funswitch-loops -fipa-pure-const -falign-labels  -falign-loops -fdce -fforward-propagate -fvect-cost-model=very-cheap -flra-remat
    func_150(uint32_t  p_151, int8_t * p_152);
	-ftree-partial-pre -foptimize-strlen -ftree-loop-vectorize -fgcse  -fgcse-lm -fipa-bit-cp  -fipa-cp  -fipa-icf -ftree-dce -fmerge-constants -fcprop-registers -fsched-interblock  -fsched-spec -ftree-vrp -fipa-reference -finline-functions-called-once -fipa-profile -fssa-backprop -ffinite-loops -finline-small-functions -ftree-switch-conversion  -ftree-tail-merge -floop-interchange -fversion-loops-for-strides -fpartial-inlining -fcse-follow-jumps  -fcse-skip-blocks -freorder-blocks-and-partition  -freorder-functions
    func_153(int32_t * const  p_154, int32_t * p_155, int32_t * p_156, int32_t * p_157);
	-fsplit-paths -falign-functions  -falign-jumps -flra-remat -foptimize-strlen -fvect-cost-model=very-cheap -ftree-sink -floop-interchange -ftree-sra -ftree-ccp -fschedule-insns  -fschedule-insns2 -fbranch-count-reg -fomit-frame-pointer -ftree-scev-cprop -fsplit-loops -fcse-follow-jumps  -fcse-skip-blocks -ftree-partial-pre -ftree-builtin-call-dce -freorder-blocks-and-partition  -freorder-functions -fdce -ftree-dce -fstrict-aliasing -fvect-cost-model=dynamic
    func_158(const int16_t  p_159, int8_t * p_160, const int32_t  p_161, int32_t  p_162);
	-floop-unroll-and-jam -fvect-cost-model=dynamic -fshrink-wrap-separate -freorder-blocks -fipa-reference-addressable -fauto-inc-dec -fssa-backprop -ftree-builtin-call-dce -fipa-profile -fdelete-null-pointer-checks -fvect-cost-model=very-cheap -ftree-loop-vectorize -ftree-pre -ftree-pta -fsplit-paths -ftree-slsr -ftree-forwprop -fcaller-saves -funswitch-loops -finline-functions -ftree-sra -fomit-frame-pointer
    func_171(int8_t  p_172, int32_t  p_173, uint8_t  p_174, int32_t  p_175);
	-fsplit-wide-types -freorder-blocks-algorithm=stc -fisolate-erroneous-paths-dereference -floop-interchange -fvect-cost-model=very-cheap -fmerge-constants -ftree-vrp -fschedule-insns  -fschedule-insns2 -fmove-loop-invariants -fdevirtualize  -fdevirtualize-speculatively -fthread-jumps -fdelete-null-pointer-checks -falign-functions  -falign-jumps -fcompare-elim -fmove-loop-stores -finline-functions-called-once -fdce -findirect-inlining -fdse -fstore-merging -fomit-frame-pointer -fauto-inc-dec
    func_176(uint32_t  p_177, uint16_t  p_178, union U0  p_179, int32_t * p_180);
	-fvect-cost-model=very-cheap -fbranch-count-reg -fcrossjumping -fipa-cp-clone -ftree-switch-conversion  -ftree-tail-merge -fshrink-wrap-separate -foptimize-sibling-calls -fstrict-aliasing -flra-remat -freorder-blocks-algorithm=stc -finline-functions-called-once -fipa-modref -fsplit-wide-types -ftree-sra -freorder-blocks-and-partition  -freorder-functions -findirect-inlining -funswitch-loops -falign-functions  -falign-jumps -fipa-profile -fschedule-insns  -fschedule-insns2 -fstore-merging -freorder-blocks
    func_184(uint16_t  p_185, int8_t  p_186, uint32_t  p_187);
	-fpartial-inlining -floop-unroll-and-jam -fhoist-adjacent-loads -fvect-cost-model=very-cheap -ftree-sink -fdelayed-branch -ftree-pre -fdevirtualize  -fdevirtualize-speculatively -freorder-blocks -fsplit-wide-types -fipa-bit-cp  -fipa-cp  -fipa-icf -freorder-blocks-and-partition  -freorder-functions -ftree-copy-prop -fdelete-null-pointer-checks -fipa-ra  -fipa-sra  -fipa-vrp -ftree-coalesce-vars -finline-small-functions -fauto-inc-dec -ftree-ter -fmove-loop-invariants -foptimize-sibling-calls -fdse
    func_191(int32_t  p_192, int32_t  p_193, const int8_t * p_194, int32_t * p_195, int8_t * p_196);
	-ftree-scev-cprop -ftree-dce -ftree-loop-vectorize -fcrossjumping -flra-remat -ftree-slsr -ftree-dse -fshrink-wrap-separate -fcombine-stack-adjustments -fipa-modref -freorder-blocks-and-partition  -freorder-functions -fmerge-constants -ftree-copy-prop -ftree-slp-vectorize -ftree-coalesce-vars -fssa-phiopt -ftree-ccp -fsplit-paths -fgcse-after-reload -fdce -ftree-partial-pre -ftree-vrp
    func_214(uint32_t  p_215);
	-ftree-partial-pre -ftree-ch -frerun-cse-after-loop -ftree-phiprop -fsplit-paths -floop-interchange -ftree-slp-vectorize -fdefer-pop -fcode-hoisting -falign-functions  -falign-jumps -findirect-inlining -fvect-cost-model=dynamic -fcompare-elim -ftree-loop-vectorize -finline-small-functions -fforward-propagate -fvect-cost-model=very-cheap -fpeel-loops -ftree-dominator-opts -fsplit-loops -fsched-interblock  -fsched-spec -ftree-sra
    func_220(int8_t * p_221, uint32_t  p_222);
	-frerun-cse-after-loop -fcombine-stack-adjustments -ftree-forwprop -ftree-phiprop -fsplit-wide-types -fhoist-adjacent-loads -ftree-switch-conversion  -ftree-tail-merge -fipa-reference -fpeel-loops -fcompare-elim -ftree-pre -finline-functions-called-once -fsplit-loops -fcprop-registers -ftree-coalesce-vars -fipa-profile -fipa-pure-const -fipa-ra  -fipa-sra  -fipa-vrp -ftree-sra -freorder-blocks-algorithm=stc -fshrink-wrap -ftree-fre
    func_228(int8_t * p_229, const int8_t * p_230);
	-floop-interchange -fdelayed-branch -fstore-merging -ftree-pre -fif-conversion -finline-small-functions -ftree-switch-conversion  -ftree-tail-merge -fipa-pure-const -ftree-slsr -fisolate-erroneous-paths-dereference -floop-unroll-and-jam -fsplit-paths -ffinite-loops -fbranch-count-reg -fforward-propagate -fversion-loops-for-strides -ftree-coalesce-vars -fpeel-loops -fpartial-inlining -freorder-blocks-and-partition  -freorder-functions -fcode-hoisting -ftree-sra
    func_231(uint32_t  p_232, int32_t * const  p_233, union U0  p_234);
	-fguess-branch-probability -fshrink-wrap -fisolate-erroneous-paths-dereference -fdelete-null-pointer-checks -ftree-copy-prop -frerun-cse-after-loop -fvect-cost-model=dynamic -fschedule-insns  -fschedule-insns2 -fversion-loops-for-strides -fcompare-elim -floop-unroll-and-jam -finline-small-functions -fipa-ra  -fipa-sra  -fipa-vrp -fvect-cost-model=very-cheap -falign-functions  -falign-jumps -ftree-fre -ftree-phiprop -fipa-profile -ftree-partial-pre -fthread-jumps -ftree-switch-conversion  -ftree-tail-merge -fgcse-after-reload
    func_241(uint32_t  p_242, uint32_t  p_243, int16_t  p_244, uint8_t * const  p_245);
	-fcompare-elim -fversion-loops-for-strides -ftree-dse -ftree-slsr -fssa-backprop -fforward-propagate -ffinite-loops -frerun-cse-after-loop -fipa-modref -floop-unroll-and-jam -fstore-merging -fmove-loop-invariants -fif-conversion -ftree-ch -fgcse-after-reload -fthread-jumps -fpredictive-commoning -fsplit-loops -fshrink-wrap -fcprop-registers -ftree-pta -fomit-frame-pointer
    func_250(uint8_t  p_251, int8_t  p_252, union U0  p_253);
	-fvect-cost-model=dynamic -ftree-loop-vectorize -fif-conversion2 -fpeel-loops -ftree-dse -fmerge-constants -fcrossjumping -fcode-hoisting -ftree-ch -ftree-sra -fdse -foptimize-strlen -fssa-phiopt -fversion-loops-for-strides -ftree-dce -fdefer-pop -flra-remat -ftree-copy-prop -fshrink-wrap-separate -fipa-reference -fhoist-adjacent-loads -ftree-coalesce-vars
    func_282(int32_t  p_283);
	-ftree-phiprop -ftree-vrp -fssa-phiopt -ftree-ccp -foptimize-sibling-calls -fvect-cost-model=dynamic -fdefer-pop -fthread-jumps -ftree-pta -ffinite-loops -ftree-coalesce-vars -fsplit-paths -fmove-loop-stores -ftree-sink -fshrink-wrap-separate -frerun-cse-after-loop -fcse-follow-jumps  -fcse-skip-blocks -fgcse-after-reload -ftree-dce -ftree-fre -ftree-ter -fipa-profile
    func_284(uint8_t * p_285, uint8_t  p_286);
	-fshrink-wrap -fmove-loop-stores -frerun-cse-after-loop -ftree-pta -ftree-ter -findirect-inlining -floop-unroll-and-jam -floop-interchange -fdce -foptimize-strlen -funswitch-loops -fif-conversion2 -fdefer-pop -ftree-slsr -flra-remat -ftree-builtin-call-dce -ftree-pre -ftree-partial-pre -fdelete-null-pointer-checks -falign-functions  -falign-jumps -fgcse-after-reload -fstore-merging
    func_287(int32_t * p_288, int8_t ** p_289, const int8_t  p_290);
	-funit-at-a-time -fcrossjumping -fcode-hoisting -fdse -fpartial-inlining -fipa-profile -frerun-cse-after-loop -freorder-blocks-and-partition  -freorder-functions -fauto-inc-dec -ftree-sra -fcompare-elim -fcombine-stack-adjustments -fhoist-adjacent-loads -fbranch-count-reg -ftree-bit-ccp -fvect-cost-model=very-cheap -freorder-blocks-algorithm=stc -ftree-partial-pre -fgcse-after-reload -floop-unroll-and-jam -fpredictive-commoning -fisolate-erroneous-paths-dereference
    func_291(int32_t * p_292);
	-foptimize-strlen -falign-functions  -falign-jumps -fcombine-stack-adjustments -ffinite-loops -ftree-dse -fshrink-wrap -fguess-branch-probability -fhoist-adjacent-loads -fipa-pure-const -foptimize-sibling-calls -ftree-sra -ftree-builtin-call-dce -finline-functions-called-once -fcode-hoisting -fsplit-wide-types -ftree-ch -fversion-loops-for-strides -funswitch-loops -fexpensive-optimizations -fstrict-aliasing -finline-small-functions -freorder-blocks-and-partition  -freorder-functions
    func_306(uint8_t * p_307);
	-fgcse-after-reload -fssa-backprop -fcaller-saves -fcompare-elim -fpeel-loops -falign-labels  -falign-loops -fstore-merging -fcode-hoisting -freorder-blocks -fdevirtualize  -fdevirtualize-speculatively -fipa-cp-clone -ffinite-loops -fmove-loop-stores -fshrink-wrap -freorder-blocks-algorithm=stc -foptimize-sibling-calls -fpartial-inlining -ftree-phiprop -finline-small-functions -fdefer-pop -ftree-dominator-opts -fssa-phiopt
    func_328(uint32_t * const  p_329, const union U0  p_330, uint32_t  p_331, int8_t ** p_332, uint8_t * p_333);
	-ftree-dominator-opts -fsplit-paths -ftree-sink -fcode-hoisting -ftree-vrp -fipa-ra  -fipa-sra  -fipa-vrp -ftree-slp-vectorize -fcse-follow-jumps  -fcse-skip-blocks -fipa-reference-addressable -fipa-reference -fcrossjumping -fif-conversion -fguess-branch-probability -fpartial-inlining -ftree-loop-vectorize -fcompare-elim -floop-unroll-and-jam -ftree-dce -fcprop-registers -funswitch-loops -freorder-blocks -ftree-forwprop
    func_334(uint32_t  p_335, uint16_t  p_336, int32_t * p_337, int32_t  p_338, uint8_t * p_339);
	-ftree-dominator-opts -fpeel-loops -ftree-forwprop -ftree-switch-conversion  -ftree-tail-merge -fdse -ftree-coalesce-vars -fif-conversion2 -fsplit-paths -fpredictive-commoning -fif-conversion -floop-unroll-and-jam -fcompare-elim -fthread-jumps -findirect-inlining -funit-at-a-time -fdevirtualize  -fdevirtualize-speculatively -fdelayed-branch -fsplit-wide-types -fhoist-adjacent-loads -fsplit-loops -fomit-frame-pointer -ftree-ccp
    func_343(const union U0  p_344, int32_t * p_345, uint32_t  p_346);
	-fcombine-stack-adjustments -frerun-cse-after-loop -fssa-phiopt -ffinite-loops -fpeel-loops -floop-unroll-and-jam -ftree-phiprop -ftree-sink -fipa-cp-clone -fguess-branch-probability -finline-functions-called-once -fmove-loop-invariants -fcprop-registers -fhoist-adjacent-loads -ftree-scev-cprop -fpredictive-commoning -freorder-blocks-and-partition  -freorder-functions -ftree-dce -fvect-cost-model=dynamic -ftree-ccp -floop-interchange -ftree-builtin-call-dce
    func_351(int8_t * p_352);
	-fvect-cost-model=very-cheap -fcaller-saves -ftree-ch -ftree-builtin-call-dce -ftree-dse -fgcse-after-reload -ftree-dce -ftree-loop-vectorize -fhoist-adjacent-loads -ftree-switch-conversion  -ftree-tail-merge -finline-small-functions -fshrink-wrap -fdelete-null-pointer-checks -fipa-bit-cp  -fipa-cp  -fipa-icf -fschedule-insns  -fschedule-insns2 -ffinite-loops -ftree-dominator-opts -ftree-coalesce-vars -flra-remat -fipa-cp-clone -fcprop-registers -ftree-fre
    func_353(int8_t  p_354);
	-fschedule-insns  -fschedule-insns2 -foptimize-strlen -freorder-blocks-and-partition  -freorder-functions -fipa-pure-const -fthread-jumps -fforward-propagate -ftree-pre -finline-functions-called-once -ftree-loop-vectorize -fpredictive-commoning -foptimize-sibling-calls -fif-conversion -ftree-ccp -fmove-loop-invariants -fauto-inc-dec -fstore-merging -fversion-loops-for-strides -ftree-forwprop -ftree-pta -finline-small-functions -freorder-blocks-algorithm=stc -fsplit-paths
    func_380(int8_t * p_381, int8_t * p_382, uint8_t  p_383, uint32_t * p_384, const uint32_t * p_385);
	-finline-small-functions -fshrink-wrap-separate -fipa-reference-addressable -floop-interchange -ftree-scev-cprop -fsched-interblock  -fsched-spec -fdefer-pop -ftree-vrp -fsplit-loops -fthread-jumps -freorder-blocks-and-partition  -freorder-functions -fdelayed-branch -ffinite-loops -fgcse-after-reload -fstore-merging -fdce -fipa-bit-cp  -fipa-cp  -fipa-icf -finline-functions -ftree-sra -fcse-follow-jumps  -fcse-skip-blocks -fgcse  -fgcse-lm -fstrict-aliasing
    func_386(uint16_t  p_387, int8_t ** const  p_388, uint32_t  p_389);
	-fcombine-stack-adjustments -fcse-follow-jumps  -fcse-skip-blocks -ftree-forwprop -fssa-backprop -fvect-cost-model=dynamic -ftree-slp-vectorize -freorder-blocks-and-partition  -freorder-functions -fipa-modref -findirect-inlining -fmerge-constants -ftree-copy-prop -fmove-loop-stores -fssa-phiopt -fcode-hoisting -ftree-coalesce-vars -finline-small-functions -fguess-branch-probability -ftree-switch-conversion  -ftree-tail-merge -fexpensive-optimizations -ftree-scev-cprop -fstrict-aliasing -fsplit-wide-types
%%
case_4.c
    isMutant: 1
    cmd gcc /root/CBouncy/tmp_5rz0w_g4/case_1714/case_4.c -I/root/csmith/include -o case_4_gcc -w -O2
    res Timeout
%%
    func_1(void);
	-ftree-builtin-call-dce -finline-functions-called-once -fguess-branch-probability -freorder-blocks -fbranch-count-reg -fvect-cost-model=dynamic -fhoist-adjacent-loads -fipa-cp-clone -ftree-loop-distribution -falign-labels  -falign-loops -finline-small-functions -fmerge-constants -fpeephole2 -fdelete-null-pointer-checks -fdse -fsplit-wide-types -ftree-vrp -floop-unroll-and-jam -funswitch-loops -fshrink-wrap -fomit-frame-pointer -fdevirtualize  -fdevirtualize-speculatively -ftree-pta -foptimize-strlen
    func_22(union U0  p_23, int32_t  p_24, union U0  p_25, int32_t * p_26, int32_t * p_27);
	-ftree-loop-vectorize -ftree-switch-conversion  -ftree-tail-merge -ftree-ccp -fstore-merging -fguess-branch-probability -fcprop-registers -ftree-phiprop -findirect-inlining -fisolate-erroneous-paths-dereference -fshrink-wrap -finline-small-functions -ftree-sink -fipa-cp-clone -freorder-blocks -ftree-builtin-call-dce -fcompare-elim -ftree-dominator-opts -fcse-follow-jumps  -fcse-skip-blocks -fipa-profile -fipa-pure-const -floop-interchange -fipa-reference-addressable -ftree-partial-pre -fvect-cost-model=very-cheap
    func_31(const uint32_t  p_32);
	-ftree-ter -fvect-cost-model=very-cheap -ftree-ch -fbranch-count-reg -fsplit-paths -ftree-sra -freorder-blocks-and-partition  -freorder-functions -fpeephole2 -fdse -foptimize-strlen -ftree-vrp -fdevirtualize  -fdevirtualize-speculatively -finline-small-functions -fhoist-adjacent-loads -fipa-reference -ftree-loop-distribution -fschedule-insns  -fschedule-insns2 -fauto-inc-dec -ftree-pre -fomit-frame-pointer -fmerge-constants -ffinite-loops -fdefer-pop -fssa-backprop
    func_38(int32_t * p_39);
	-ftree-pre -fcprop-registers -falign-functions  -falign-jumps -fcombine-stack-adjustments -ftree-forwprop -ftree-slp-vectorize -fcompare-elim -ftree-ccp -fisolate-erroneous-paths-dereference -ftree-coalesce-vars -fipa-reference-addressable -fauto-inc-dec -fipa-cp-clone -fsplit-loops -ftree-partial-pre -fversion-loops-for-strides -ftree-ch -flra-remat -fpredictive-commoning -ftree-vrp -ftree-copy-prop -fsched-interblock  -fsched-spec -fipa-profile -ftree-dse
    func_40(int32_t * p_41, int32_t * p_42, int16_t  p_43, uint16_t  p_44);
	-ftree-forwprop -findirect-inlining -fssa-backprop -fdevirtualize  -fdevirtualize-speculatively -fthread-jumps -fipa-pure-const -ftree-ccp -fpeephole2 -fhoist-adjacent-loads -fcrossjumping -fbranch-count-reg -foptimize-sibling-calls -fdelete-null-pointer-checks -freorder-blocks -ftree-bit-ccp -ftree-switch-conversion  -ftree-tail-merge -ftree-vrp -fgcse-after-reload -fschedule-insns  -fschedule-insns2 -finline-functions-called-once -fmove-loop-stores -fshrink-wrap-separate -ftree-pta -fcaller-saves
    func_45(int32_t  p_46, uint32_t  p_47, int32_t  p_48);
	-fipa-pure-const -fipa-bit-cp  -fipa-cp  -fipa-icf -fcode-hoisting -fssa-backprop -fipa-reference -frerun-cse-after-loop -finline-functions-called-once -freorder-blocks-algorithm=stc -ftree-pta -ftree-switch-conversion  -ftree-tail-merge -ftree-copy-prop -freorder-blocks-and-partition  -freorder-functions -ftree-forwprop -ftree-ter -fforward-propagate -ftree-vrp -fcse-follow-jumps  -fcse-skip-blocks -ftree-pre -funit-at-a-time -fcaller-saves -ftree-dce -fversion-loops-for-strides -fpartial-inlining -fif-conversion2
    func_59(int32_t * p_60, uint8_t  p_61, int32_t * p_62);
	-ftree-dominator-opts -falign-labels  -falign-loops -fdevirtualize  -fdevirtualize-speculatively -fthread-jumps -fdelayed-branch -fipa-cp-clone -fvect-cost-model=dynamic -fshrink-wrap-separate -fipa-pure-const -freorder-blocks-and-partition  -freorder-functions -fcode-hoisting -fssa-backprop -fversion-loops-for-strides -fdelete-null-pointer-checks -ftree-sink -ftree-coalesce-vars -ftree-builtin-call-dce -fmove-loop-stores -fbranch-count-reg -fipa-profile -fstrict-aliasing -findirect-inlining -ftree-loop-distribution -finline-functions-called-once
    func_64(int32_t * p_65, int32_t * p_66, const int32_t * p_67, uint32_t  p_68, int16_t  p_69);
	-findirect-inlining -ftree-switch-conversion  -ftree-tail-merge -fcaller-saves -fdce -fmove-loop-invariants -ftree-dominator-opts -fauto-inc-dec -fforward-propagate -ftree-forwprop -ftree-slp-vectorize -fdefer-pop -fipa-bit-cp  -fipa-cp  -fipa-icf -ftree-sink -fsched-interblock  -fsched-spec -fssa-backprop -ftree-dse -fthread-jumps -fmove-loop-stores -ffinite-loops -fcse-follow-jumps  -fcse-skip-blocks -fdelayed-branch -fipa-pure-const -finline-functions -foptimize-sibling-calls
    func_70(int32_t * p_71, union U0  p_72, uint32_t  p_73, uint8_t  p_74, int32_t * p_75);
	-ffinite-loops -fpartial-inlining -ftree-slsr -fvect-cost-model=very-cheap -fif-conversion -fshrink-wrap -fmove-loop-stores -fshrink-wrap-separate -ftree-dce -fcode-hoisting -ftree-coalesce-vars -findirect-inlining -fomit-frame-pointer -ftree-switch-conversion  -ftree-tail-merge -freorder-blocks-algorithm=stc -fipa-pure-const -fipa-cp-clone -ftree-copy-prop -fsched-interblock  -fsched-spec -ftree-sra -fexpensive-optimizations -fdefer-pop -fmove-loop-invariants -funswitch-loops
    func_76(const union U0  p_77);
	-findirect-inlining -falign-functions  -falign-jumps -frerun-cse-after-loop -fshrink-wrap-separate -fshrink-wrap -fcse-follow-jumps  -fcse-skip-blocks -fipa-pure-const -fcprop-registers -ftree-pre -fipa-reference-addressable -finline-functions-called-once -ftree-fre -fipa-modref -fsplit-wide-types -fmove-loop-invariants -ftree-slsr -ftree-copy-prop -fssa-backprop -ftree-vrp -freorder-blocks-and-partition  -freorder-functions -fstore-merging -fexpensive-optimizations -funit-at-a-time -ftree-ch
    func_78(uint32_t  p_79);
	-ftree-copy-prop -fcaller-saves -fdelayed-branch -fstrict-aliasing -freorder-blocks-and-partition  -freorder-functions -fipa-ra  -fipa-sra  -fipa-vrp -fipa-modref -fdelete-null-pointer-checks -ftree-slsr -freorder-blocks -ftree-ch -fguess-branch-probability -freorder-blocks-algorithm=stc -fipa-bit-cp  -fipa-cp  -fipa-icf -funit-at-a-time -ftree-slp-vectorize -fforward-propagate -fcse-follow-jumps  -fcse-skip-blocks -ftree-builtin-call-dce -ftree-coalesce-vars -fipa-reference -fschedule-insns  -fschedule-insns2 -ftree-pta -fcode-hoisting
    func_82(int32_t * p_83, int32_t  p_84);
	-fvect-cost-model=very-cheap -fsplit-loops -fipa-reference-addressable -ftree-dominator-opts -freorder-blocks-algorithm=stc -fomit-frame-pointer -ftree-vrp -fdce -flra-remat -fstore-merging -ftree-coalesce-vars -floop-interchange -fversion-loops-for-strides -fsplit-paths -foptimize-strlen -fshrink-wrap-separate -fdse -findirect-inlining -ftree-fre -freorder-blocks -ftree-slp-vectorize -fexpensive-optimizations -fmerge-constants -fipa-bit-cp  -fipa-cp  -fipa-icf
    func_85(int32_t * p_86, const int32_t * p_87, int32_t * p_88, const uint32_t  p_89, int16_t  p_90);
	-fmove-loop-invariants -fssa-backprop -foptimize-strlen -ftree-slp-vectorize -funswitch-loops -ftree-builtin-call-dce -ftree-ter -fstore-merging -freorder-blocks -ftree-ch -fipa-ra  -fipa-sra  -fipa-vrp -fipa-profile -ftree-loop-distribution -fshrink-wrap -fsplit-wide-types -falign-labels  -falign-loops -freorder-blocks-algorithm=stc -finline-small-functions -fomit-frame-pointer -foptimize-sibling-calls -freorder-blocks-and-partition  -freorder-functions -ftree-dse -ftree-switch-conversion  -ftree-tail-merge -ftree-slsr
    func_91(uint16_t  p_92, uint8_t  p_93, uint16_t  p_94, uint16_t  p_95);
	-fipa-pure-const -foptimize-sibling-calls -ftree-coalesce-vars -ftree-dominator-opts -fgcse  -fgcse-lm -fdse -ftree-pta -fthread-jumps -ftree-pre -fipa-cp-clone -fcrossjumping -fsched-interblock  -fsched-spec -fipa-bit-cp  -fipa-cp  -fipa-icf -funit-at-a-time -fcode-hoisting -fipa-reference -fipa-profile -fpeephole2 -ftree-forwprop -fpartial-inlining -fguess-branch-probability -flra-remat -ftree-slsr -ftree-partial-pre
    func_100(int32_t * p_101);
	-fisolate-erroneous-paths-dereference -ftree-loop-vectorize -fipa-modref -fhoist-adjacent-loads -fpeephole2 -ftree-copy-prop -fipa-pure-const -finline-functions-called-once -fdevirtualize  -fdevirtualize-speculatively -fipa-cp-clone -fdce -fpredictive-commoning -ftree-dce -ftree-pre -ftree-dse -fssa-phiopt -ftree-pta -fipa-reference -fshrink-wrap-separate -fsplit-wide-types -fsplit-loops -ftree-switch-conversion  -ftree-tail-merge -fcrossjumping -ftree-slp-vectorize
    func_102(uint8_t  p_103);
	-fif-conversion2 -fipa-profile -ftree-slsr -freorder-blocks -fstore-merging -ftree-copy-prop -ftree-vrp -fomit-frame-pointer -ftree-partial-pre -fcombine-stack-adjustments -ftree-ccp -fcrossjumping -fpeel-loops -ftree-sra -frerun-cse-after-loop -ffinite-loops -freorder-blocks-and-partition  -freorder-functions -floop-interchange -fipa-ra  -fipa-sra  -fipa-vrp -fpeephole2 -floop-unroll-and-jam -fshrink-wrap-separate -fversion-loops-for-strides -fvect-cost-model=very-cheap
    func_106(int32_t * p_107, uint32_t  p_108, const union U0  p_109);
	-fvect-cost-model=very-cheap -fcse-follow-jumps  -fcse-skip-blocks -ftree-slp-vectorize -fipa-reference-addressable -ftree-bit-ccp -ftree-copy-prop -foptimize-sibling-calls -ftree-vrp -finline-functions-called-once -ftree-sra -fforward-propagate -freorder-blocks-algorithm=stc -ftree-ccp -fipa-pure-const -ftree-builtin-call-dce -ftree-forwprop -fsched-interblock  -fsched-spec -fversion-loops-for-strides -fexpensive-optimizations -finline-functions -ffinite-loops -flra-remat -ftree-loop-vectorize -fmove-loop-invariants
    func_110(int32_t  p_111);
	-ftree-slp-vectorize -ftree-ch -fif-conversion2 -fstore-merging -fvect-cost-model=very-cheap -ftree-sra -ftree-pta -fauto-inc-dec -fmove-loop-stores -ftree-partial-pre -fbranch-count-reg -fipa-bit-cp  -fipa-cp  -fipa-icf -frerun-cse-after-loop -ftree-bit-ccp -fcprop-registers -ftree-coalesce-vars -foptimize-strlen -fschedule-insns  -fschedule-insns2 -finline-functions -fif-conversion -fthread-jumps -fpeephole2 -ftree-phiprop -falign-functions  -falign-jumps
    func_116(int32_t * p_117, const int32_t * p_118, uint32_t  p_119);
	-falign-labels  -falign-loops -ftree-builtin-call-dce -freorder-blocks-algorithm=stc -fipa-modref -fisolate-erroneous-paths-dereference -fpartial-inlining -funswitch-loops -ftree-copy-prop -fcaller-saves -ffinite-loops -ftree-slsr -foptimize-strlen -fcode-hoisting -fipa-profile -funit-at-a-time -fgcse-after-reload -ftree-fre -ftree-bit-ccp -ftree-switch-conversion  -ftree-tail-merge -fssa-backprop -fpeephole2 -fdevirtualize  -fdevirtualize-speculatively -fmove-loop-stores -fcrossjumping
    func_120(int32_t * p_121, int32_t * p_122, const int8_t  p_123, int8_t  p_124);
	-ftree-fre -ftree-ter -ftree-loop-vectorize -fdevirtualize  -fdevirtualize-speculatively -fshrink-wrap-separate -foptimize-sibling-calls -fmove-loop-stores -fpartial-inlining -fstore-merging -fvect-cost-model=very-cheap -fipa-reference-addressable -falign-functions  -falign-jumps -fstrict-aliasing -finline-functions-called-once -freorder-blocks -ftree-coalesce-vars -ftree-builtin-call-dce -ftree-sink -fif-conversion -fcse-follow-jumps  -fcse-skip-blocks -fdce -fcaller-saves -ftree-ccp -fguess-branch-probability
    func_126(int32_t * p_127, uint16_t  p_128, uint8_t  p_129, union U0  p_130);
	-fipa-ra  -fipa-sra  -fipa-vrp -ftree-ccp -ftree-phiprop -fguess-branch-probability -fdelayed-branch -ftree-scev-cprop -fsplit-loops -fcaller-saves -ftree-copy-prop -fpredictive-commoning -fipa-modref -fversion-loops-for-strides -flra-remat -ftree-slsr -ftree-loop-vectorize -ftree-forwprop -fexpensive-optimizations -finline-functions -ftree-sink -ftree-sra -fipa-profile -ftree-coalesce-vars -floop-interchange -fshrink-wrap
    func_131(int32_t * p_132, const uint8_t  p_133, int32_t * p_134);
	-fdelete-null-pointer-checks -fsplit-loops -fipa-pure-const -ftree-fre -ftree-ch -ftree-copy-prop -fmove-loop-stores -ftree-loop-distribution -ftree-coalesce-vars -fdevirtualize  -fdevirtualize-speculatively -fforward-propagate -fauto-inc-dec -ftree-sink -fif-conversion2 -fisolate-erroneous-paths-dereference -fssa-backprop -ftree-phiprop -ftree-slsr -ftree-loop-vectorize -fgcse  -fgcse-lm -ftree-dominator-opts -fif-conversion -ftree-sra -funswitch-loops
    func_135(int32_t * p_136);
	-fpeel-loops -fipa-pure-const -ftree-forwprop -fsplit-loops -fdefer-pop -fhoist-adjacent-loads -fstrict-aliasing -fschedule-insns  -fschedule-insns2 -ftree-ter -fipa-bit-cp  -fipa-cp  -fipa-icf -fssa-backprop -fif-conversion -finline-functions -finline-functions-called-once -fipa-reference-addressable -fauto-inc-dec -fthread-jumps -fcaller-saves -fdse -flra-remat -fssa-phiopt -fvect-cost-model=very-cheap -ftree-bit-ccp -ftree-scev-cprop
    func_137(int16_t  p_138, uint8_t  p_139, int32_t * p_140, uint32_t  p_141, int32_t  p_142);
	-fssa-backprop -ftree-vrp -fcse-follow-jumps  -fcse-skip-blocks -falign-functions  -falign-jumps -funswitch-loops -fomit-frame-pointer -fisolate-erroneous-paths-dereference -finline-functions-called-once -fipa-pure-const -fdelayed-branch -freorder-blocks-and-partition  -freorder-functions -fsplit-paths -foptimize-strlen -fstrict-aliasing -fgcse-after-reload -fif-conversion2 -fcaller-saves -fguess-branch-probability -fif-conversion -fthread-jumps -fsched-interblock  -fsched-spec -fgcse  -fgcse-lm -ftree-dominator-opts -ftree-dse
    func_143(int32_t  p_144, uint16_t  p_145);
	-fcrossjumping -fcaller-saves -fsplit-paths -fgcse  -fgcse-lm -fdse -fipa-bit-cp  -fipa-cp  -fipa-icf -ftree-loop-vectorize -fhoist-adjacent-loads -fipa-cp-clone -ftree-pre -fshrink-wrap-separate -fsplit-wide-types -ftree-pta -fcompare-elim -fexpensive-optimizations -ftree-ch -ftree-sra -ftree-dse -funit-at-a-time -fpeephole2 -fdelete-null-pointer-checks -ftree-loop-distribution -ftree-slsr -fgcse-after-reload
    func_150(uint32_t  p_151, int8_t * p_152);
	-fif-conversion -fif-conversion2 -ftree-dominator-opts -fdce -ftree-switch-conversion  -ftree-tail-merge -fipa-pure-const -ftree-ccp -fssa-backprop -fthread-jumps -fipa-bit-cp  -fipa-cp  -fipa-icf -fcombine-stack-adjustments -fsplit-paths -ftree-pre -ftree-sink -fgcse-after-reload -fipa-reference -findirect-inlining -finline-functions-called-once -fgcse  -fgcse-lm -fcse-follow-jumps  -fcse-skip-blocks -fpeel-loops -ftree-forwprop -foptimize-strlen -ftree-slp-vectorize
    func_153(int32_t * const  p_154, int32_t * p_155, int32_t * p_156, int32_t * p_157);
	-frerun-cse-after-loop -fpartial-inlining -ftree-switch-conversion  -ftree-tail-merge -fif-conversion2 -fdefer-pop -fipa-profile -ftree-partial-pre -fipa-pure-const -fipa-reference-addressable -freorder-blocks -fomit-frame-pointer -freorder-blocks-and-partition  -freorder-functions -fvect-cost-model=dynamic -fmove-loop-invariants -ftree-pta -fshrink-wrap-separate -fforward-propagate -fipa-ra  -fipa-sra  -fipa-vrp -funit-at-a-time -fshrink-wrap -fdce -fdevirtualize  -fdevirtualize-speculatively -foptimize-strlen -finline-functions-called-once
    func_158(const int16_t  p_159, int8_t * p_160, const int32_t  p_161, int32_t  p_162);
	-ftree-partial-pre -ftree-bit-ccp -ftree-builtin-call-dce -fdelayed-branch -fthread-jumps -falign-functions  -falign-jumps -fvect-cost-model=dynamic -ftree-dce -ftree-ch -fshrink-wrap-separate -ftree-scev-cprop -fipa-reference-addressable -floop-interchange -fmove-loop-stores -fmerge-constants -fsplit-loops -ftree-ter -findirect-inlining -fguess-branch-probability -ftree-ccp -ftree-slp-vectorize -ffinite-loops -fforward-propagate -fversion-loops-for-strides
    func_171(int8_t  p_172, int32_t  p_173, uint8_t  p_174, int32_t  p_175);
	-fdefer-pop -ftree-sink -freorder-blocks -fsched-interblock  -fsched-spec -fcode-hoisting -ftree-fre -ftree-coalesce-vars -ftree-bit-ccp -fcrossjumping -ftree-scev-cprop -fgcse-after-reload -freorder-blocks-algorithm=stc -ftree-dominator-opts -fbranch-count-reg -foptimize-strlen -ftree-pta -fforward-propagate -fdelayed-branch -fcse-follow-jumps  -fcse-skip-blocks -fmove-loop-invariants -fgcse  -fgcse-lm -fssa-backprop -floop-interchange -ftree-vrp
    func_176(uint32_t  p_177, uint16_t  p_178, union U0  p_179, int32_t * p_180);
	-ftree-sink -fmove-loop-invariants -ftree-dse -fstore-merging -fcse-follow-jumps  -fcse-skip-blocks -freorder-blocks-algorithm=stc -fpeel-loops -ftree-switch-conversion  -ftree-tail-merge -freorder-blocks-and-partition  -freorder-functions -finline-small-functions -fmerge-constants -floop-unroll-and-jam -fpeephole2 -fsplit-wide-types -ftree-scev-cprop -fipa-modref -ftree-builtin-call-dce -freorder-blocks -ftree-ccp -fsplit-paths -fforward-propagate -fthread-jumps -fschedule-insns  -fschedule-insns2 -fexpensive-optimizations
    func_184(uint16_t  p_185, int8_t  p_186, uint32_t  p_187);
	-fmerge-constants -fdce -freorder-blocks -freorder-blocks-algorithm=stc -fversion-loops-for-strides -finline-small-functions -floop-interchange -fipa-ra  -fipa-sra  -fipa-vrp -fshrink-wrap-separate -ftree-sink -fexpensive-optimizations -foptimize-strlen -fipa-profile -fsplit-paths -fipa-bit-cp  -fipa-cp  -fipa-icf -falign-functions  -falign-jumps -ftree-slsr -ftree-dse -ftree-dce -ftree-forwprop -fpredictive-commoning -ftree-ccp -ftree-loop-distribution -fdelete-null-pointer-checks
    func_191(int32_t  p_192, int32_t  p_193, const int8_t * p_194, int32_t * p_195, int8_t * p_196);
	-fipa-pure-const -ftree-dominator-opts -ftree-partial-pre -ftree-sink -fomit-frame-pointer -fversion-loops-for-strides -fsplit-wide-types -fvect-cost-model=very-cheap -fschedule-insns  -fschedule-insns2 -flra-remat -ftree-builtin-call-dce -ftree-ter -fgcse-after-reload -finline-functions -ftree-ch -fif-conversion2 -fssa-backprop -fhoist-adjacent-loads -fpeephole2 -ftree-slp-vectorize -floop-interchange -fdse -fgcse  -fgcse-lm -funit-at-a-time
    func_214(uint32_t  p_215);
	-fguess-branch-probability -funit-at-a-time -ftree-dce -fexpensive-optimizations -fmove-loop-stores -fipa-bit-cp  -fipa-cp  -fipa-icf -ftree-phiprop -finline-functions -fthread-jumps -floop-unroll-and-jam -ftree-slsr -ftree-dse -fsplit-loops -fhoist-adjacent-loads -ftree-fre -fdefer-pop -falign-labels  -falign-loops -fgcse-after-reload -fssa-phiopt -finline-small-functions -fipa-pure-const -freorder-blocks -ftree-scev-cprop -ftree-slp-vectorize
    func_220(int8_t * p_221, uint32_t  p_222);
	-finline-functions-called-once -fauto-inc-dec -fif-conversion2 -ftree-copy-prop -ftree-dse -ftree-ch -fstore-merging -fhoist-adjacent-loads -ftree-vrp -fcode-hoisting -fmove-loop-stores -fipa-bit-cp  -fipa-cp  -fipa-icf -fisolate-erroneous-paths-dereference -fdefer-pop -fcombine-stack-adjustments -ftree-ccp -ftree-ter -fmove-loop-invariants -ftree-loop-vectorize -fdelayed-branch -falign-functions  -falign-jumps -fdce -fgcse-after-reload -ftree-coalesce-vars
    func_228(int8_t * p_229, const int8_t * p_230);
	-fmerge-constants -fcrossjumping -fipa-bit-cp  -fipa-cp  -fipa-icf -fcode-hoisting -fdefer-pop -falign-labels  -falign-loops -ftree-ter -ftree-builtin-call-dce -fipa-profile -ftree-dce -ftree-fre -ftree-phiprop -floop-interchange -fsplit-paths -ftree-switch-conversion  -ftree-tail-merge -ftree-pre -fcaller-saves -ftree-partial-pre -fdce -finline-small-functions -ftree-bit-ccp -finline-functions -ftree-slp-vectorize -fsplit-loops
    func_231(uint32_t  p_232, int32_t * const  p_233, union U0  p_234);
	-foptimize-strlen -fexpensive-optimizations -fipa-pure-const -fdse -ftree-copy-prop -fcode-hoisting -ftree-ter -ftree-dce -finline-functions-called-once -ftree-scev-cprop -falign-functions  -falign-jumps -ftree-loop-distribution -fsplit-loops -fcrossjumping -ftree-pta -fmove-loop-stores -fdefer-pop -freorder-blocks-and-partition  -freorder-functions -fforward-propagate -fcprop-registers -funswitch-loops -finline-functions -freorder-blocks-algorithm=stc -funit-at-a-time
    func_241(uint32_t  p_242, uint32_t  p_243, int16_t  p_244, uint8_t * const  p_245);
	-ftree-ter -ftree-scev-cprop -fforward-propagate -fgcse  -fgcse-lm -fcse-follow-jumps  -fcse-skip-blocks -floop-unroll-and-jam -ftree-slp-vectorize -fipa-bit-cp  -fipa-cp  -fipa-icf -falign-functions  -falign-jumps -fipa-modref -foptimize-strlen -fstore-merging -fcprop-registers -fdevirtualize  -fdevirtualize-speculatively -ftree-pta -fsplit-loops -fcaller-saves -fthread-jumps -fcode-hoisting -fssa-backprop -fdelayed-branch -fif-conversion2 -ftree-dce -fhoist-adjacent-loads
    func_250(uint8_t  p_251, int8_t  p_252, union U0  p_253);
	-ftree-pre -ftree-dce -ftree-sra -fmerge-constants -fssa-backprop -funswitch-loops -frerun-cse-after-loop -ffinite-loops -fdce -fgcse  -fgcse-lm -fversion-loops-for-strides -ftree-ccp -fdelete-null-pointer-checks -foptimize-strlen -ftree-dse -fshrink-wrap-separate -ftree-scev-cprop -fmove-loop-stores -fbranch-count-reg -fssa-phiopt -falign-functions  -falign-jumps -falign-labels  -falign-loops -fauto-inc-dec -fomit-frame-pointer
    func_282(int32_t  p_283);
	-fipa-profile -fauto-inc-dec -ffinite-loops -fpeel-loops -ftree-vrp -ftree-ter -fversion-loops-for-strides -freorder-blocks-algorithm=stc -ftree-sra -foptimize-strlen -ftree-builtin-call-dce -fstore-merging -funit-at-a-time -fmove-loop-stores -ftree-loop-vectorize -fcompare-elim -fhoist-adjacent-loads -ftree-coalesce-vars -fdelete-null-pointer-checks -fexpensive-optimizations -ftree-phiprop -fschedule-insns  -fschedule-insns2 -fdevirtualize  -fdevirtualize-speculatively -fcombine-stack-adjustments
    func_284(uint8_t * p_285, uint8_t  p_286);
	-fcrossjumping -ftree-coalesce-vars -ftree-phiprop -ftree-pta -fcprop-registers -fhoist-adjacent-loads -ftree-loop-distribution -fipa-cp-clone -fif-conversion -fcombine-stack-adjustments -fschedule-insns  -fschedule-insns2 -fvect-cost-model=dynamic -fmove-loop-stores -fversion-loops-for-strides -fdse -fdce -ftree-copy-prop -fpartial-inlining -ftree-sra -fdevirtualize  -fdevirtualize-speculatively -fstore-merging -fcaller-saves -fcse-follow-jumps  -fcse-skip-blocks -fisolate-erroneous-paths-dereference
    func_287(int32_t * p_288, int8_t ** p_289, const int8_t  p_290);
	-fomit-frame-pointer -fdefer-pop -ftree-bit-ccp -ftree-loop-vectorize -fcse-follow-jumps  -fcse-skip-blocks -fif-conversion -fexpensive-optimizations -findirect-inlining -finline-small-functions -fipa-reference -fipa-pure-const -fsched-interblock  -fsched-spec -fvect-cost-model=very-cheap -freorder-blocks-algorithm=stc -fcrossjumping -ftree-dce -falign-functions  -falign-jumps -flra-remat -fpartial-inlining -ftree-loop-distribution -fmove-loop-stores -fpredictive-commoning -ftree-ch -fdevirtualize  -fdevirtualize-speculatively
    func_291(int32_t * p_292);
	-ftree-coalesce-vars -ftree-partial-pre -fvect-cost-model=very-cheap -fisolate-erroneous-paths-dereference -fomit-frame-pointer -ftree-slp-vectorize -fssa-phiopt -fsplit-paths -freorder-blocks-and-partition  -freorder-functions -fipa-cp-clone -ftree-dse -ftree-loop-vectorize -fcrossjumping -falign-labels  -falign-loops -fcaller-saves -fmove-loop-stores -fssa-backprop -fipa-ra  -fipa-sra  -fipa-vrp -fcombine-stack-adjustments -fmove-loop-invariants -fipa-profile -funswitch-loops -freorder-blocks-algorithm=stc -findirect-inlining
    func_306(uint8_t * p_307);
	-ftree-loop-distribution -ftree-loop-vectorize -falign-functions  -falign-jumps -fmerge-constants -funit-at-a-time -ftree-ccp -fbranch-count-reg -ftree-sra -fdelayed-branch -fdse -ftree-partial-pre -freorder-blocks -fthread-jumps -ftree-ch -finline-functions -ftree-dominator-opts -ftree-ter -floop-interchange -fversion-loops-for-strides -fipa-ra  -fipa-sra  -fipa-vrp -fipa-reference-addressable -fdelete-null-pointer-checks -fdefer-pop -fsplit-loops
    func_328(uint32_t * const  p_329, const union U0  p_330, uint32_t  p_331, int8_t ** p_332, uint8_t * p_333);
	-flra-remat -ftree-ccp -fomit-frame-pointer -findirect-inlining -ftree-switch-conversion  -ftree-tail-merge -fauto-inc-dec -fgcse-after-reload -ftree-sra -fif-conversion2 -ftree-dse -ftree-ch -ftree-phiprop -fpredictive-commoning -fdefer-pop -ftree-slsr -fstore-merging -fbranch-count-reg -ftree-vrp -fsplit-paths -finline-small-functions -fipa-bit-cp  -fipa-cp  -fipa-icf -funswitch-loops -fsplit-wide-types -fdse
    func_334(uint32_t  p_335, uint16_t  p_336, int32_t * p_337, int32_t  p_338, uint8_t * p_339);
	-finline-functions -ftree-bit-ccp -ftree-scev-cprop -fpartial-inlining -ftree-switch-conversion  -ftree-tail-merge -fcrossjumping -fipa-modref -funswitch-loops -fexpensive-optimizations -fcode-hoisting -fssa-phiopt -ftree-slsr -ftree-fre -fmerge-constants -foptimize-strlen -fshrink-wrap -floop-unroll-and-jam -ftree-vrp -ftree-copy-prop -fif-conversion -falign-labels  -falign-loops -flra-remat -ftree-dse -funit-at-a-time
    func_343(const union U0  p_344, int32_t * p_345, uint32_t  p_346);
	-fvect-cost-model=very-cheap -frerun-cse-after-loop -fforward-propagate -fdce -fsched-interblock  -fsched-spec -freorder-blocks -freorder-blocks-algorithm=stc -fthread-jumps -fgcse  -fgcse-lm -fcombine-stack-adjustments -ftree-dse -fschedule-insns  -fschedule-insns2 -fshrink-wrap -ftree-switch-conversion  -ftree-tail-merge -ftree-slsr -flra-remat -fexpensive-optimizations -floop-unroll-and-jam -fcode-hoisting -ftree-sra -ftree-vrp -ftree-builtin-call-dce -fpeephole2 -foptimize-strlen
    func_351(int8_t * p_352);
	-fcse-follow-jumps  -fcse-skip-blocks -fforward-propagate -fauto-inc-dec -falign-labels  -falign-loops -ftree-slsr -ftree-bit-ccp -ftree-pre -ftree-vrp -fipa-profile -fssa-phiopt -findirect-inlining -fhoist-adjacent-loads -ftree-ccp -freorder-blocks-and-partition  -freorder-functions -ftree-sra -fsplit-paths -fexpensive-optimizations -fdelete-null-pointer-checks -fif-conversion2 -fguess-branch-probability -ftree-dce -fdelayed-branch -falign-functions  -falign-jumps -fomit-frame-pointer
    func_353(int8_t  p_354);
	-fssa-backprop -fexpensive-optimizations -fipa-reference -fcaller-saves -fpeel-loops -fdelayed-branch -fdefer-pop -fsched-interblock  -fsched-spec -ftree-slp-vectorize -fschedule-insns  -fschedule-insns2 -floop-unroll-and-jam -fsplit-wide-types -fbranch-count-reg -fhoist-adjacent-loads -ftree-scev-cprop -fsplit-paths -ftree-coalesce-vars -ftree-dce -findirect-inlining -ftree-ter -ftree-pre -falign-functions  -falign-jumps -fvect-cost-model=dynamic -ftree-pta
    func_380(int8_t * p_381, int8_t * p_382, uint8_t  p_383, uint32_t * p_384, const uint32_t * p_385);
	-fsplit-paths -ftree-dse -fcaller-saves -ftree-bit-ccp -ftree-fre -fshrink-wrap-separate -fgcse-after-reload -ftree-slp-vectorize -fipa-pure-const -fpeel-loops -fhoist-adjacent-loads -fssa-phiopt -fdelayed-branch -fif-conversion -fpeephole2 -funswitch-loops -frerun-cse-after-loop -ftree-pre -fcompare-elim -ftree-loop-vectorize -ftree-dce -foptimize-sibling-calls -floop-interchange -ftree-scev-cprop
    func_386(uint16_t  p_387, int8_t ** const  p_388, uint32_t  p_389);
	-fhoist-adjacent-loads -fipa-cp-clone -fif-conversion2 -ftree-forwprop -fcombine-stack-adjustments -fcse-follow-jumps  -fcse-skip-blocks -fcprop-registers -fgcse-after-reload -ftree-fre -ftree-loop-distribution -fversion-loops-for-strides -fforward-propagate -fcrossjumping -ffinite-loops -floop-unroll-and-jam -fcaller-saves -ftree-partial-pre -freorder-blocks-and-partition  -freorder-functions -fbranch-count-reg -falign-labels  -falign-loops -fpeephole2 -fmove-loop-stores -fif-conversion -ftree-coalesce-vars
%%
